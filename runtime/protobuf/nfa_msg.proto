// Define all the RPC calls that I defined in the new design document
syntax = "proto3";

package nfa_msg;

// The greeting service definition.
service Runtime_RPC {
  // Sends a greeting
  rpc LivenessCheck (LivenessRequest) returns (LivenessReply) {}
  
  rpc AddOutputView (ViewList) returns (CurrentView){}
  
  rpc AddInputView (ViewList) returns (CurrentView){}
  
  rpc DeleteOutputView (ViewList) returns (CurrentView){}
  
  rpc DeleteInputView (ViewList) returns (CurrentView){}
  
  rpc SetMigrationTarget (MigrationTarget) returns (MigrationNegotiationResult) {}
  
  rpc AddReplicas (ReplicaList) returns (ReplicaNegotiationResult){}
  
  rpc DeleteReplicas (ReplicaList) returns (ReplicaNegotiationResult){}  
  
  rpc Recover (RecoverRuntime) returns (RecoverRuntimeResult){}  
  
  rpc QueryRuntimeInfo (RuntimeInfoRequest) returns (RuntimeInfo){} 
  
  
  
}






// The request message containing the user's name.
message LivenessRequest {
  string name = 1;
}

// The response message containing the greetings
message LivenessReply {
  bool reply = 1;
}

//message for view
message View{
  uint64 worker_id=1;
  string input_port_mac=2;
  string output_port_mac=3;
  string control_port_mac=4;
  string rpc_ip=5;
  uint64 rpc_port=6;
}

message ViewList{
  repeated View view=1;
}

message CurrentView{
  repeated View input_views = 2;
  repeated View output_views=3;
  
}

//message for migration
message MigrationTarget{
  View Migration_target_info=1;
  repeated View input_views=2;
  repeated View output_views=3;
  uint64 quota = 4;
}


message MigrationNegotiationResult{
  bool succeed=1;
  string fail_reason=3;
  uint64 quota=2;
}

//message for replication

message ReplicaInfo{
  View replica = 1;
  repeated View input_views = 3;
  repeated View output_views = 4;
}

message ReplicaList{

  repeated ReplicaInfo replicas = 2;
}


message ReplicaNegotiationResult{
  repeated View current_replicas=1;
  bool succeed=2;
  string fail_reason=3;
}
//message for recover
message RecoverRuntime{
  uint64 runtime_id = 1;
}


message RecoverRuntimeResult{
  bool ack = 1;
  string fail_reason=3;
}

//message for query




message RuntimeInfoRequest{
  int runtime_id=1;
}

message RuntimeInfo{
  message BasicInfo{
    uint64 worker_id = 1;
    string input_port_mac = 2;
    string output_port_mac = 3;
    string control_port_mac = 4;
    string rpc_ip = 5;
    uint16 rpc_port = 6;
  }


  message ViewInfo{
    repeated View input_views = 7;
    repeated View output_views = 8;
  }


  message MigrationInfo{
    View migration_target = 9;
    uint64 migration_quota = 10;
  }


  message ReplicationInfo{
    repeated View replica_list = 11;
    repeated View storage_list = 12;
  }


  message NFModuleInfo{
    repeated uint8 loaded_nf_modules = 13;
    repeated uint8 service_chain_type = 14;
  }


  BasicInfo basic_info = 1;
  ViewInfo view_info = 2;
  MigrationInfo migration_info = 3;
  ReplicationInfo replication_info = 4;
  NFModuleInfo nf_module_info = 5;
  bool succeed=6;
  string fail_reason=7;
}



