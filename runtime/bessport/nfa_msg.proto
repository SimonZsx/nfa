syntax = "proto3";

package nfa_msg;

service Runtime_RPC {
  // Sends a greeting
  rpc LivenessCheck (LivenessRequest) returns (LivenessReply) {}
  rpc AddOutputRts (AddOutputRtsReq) returns (AddOutputRtsRes) {}
  rpc AddInputRt (AddInputRtReq) returns (AddInputRtRep) {}
  rpc DeleteOutputRt (DeleteOutputRtReq) returns (DeleteOutputRtRep) {}
  rpc DeleteInputRt (DeleteInputRtReq) returns (DeleteInputRtRep) {}
  rpc SetMigrationTarget (MigrationTarget) returns (MigrationNegotiationResult){}
  rpc MigrationNegotiate (MigrationNegotiation) returns (MigrationNegotiationResult){}
}


message Address{
  string rpc_ip = 1;
  int32 rpc_port = 2;
}

message LivenessRequest {

}

message LivenessReply {

}

message RuntimeConfig{
  int32 runtime_id = 1;
  string input_port_mac = 2;
  string output_port_mac = 3;
  string control_port_mac = 4;
  string rpc_ip = 5;
  int32 rpc_port = 6;
}

message AddOutputRtsReq{
  message Address{
    string rpc_ip = 1;
    int32 rpc_port = 2;
  }
  repeated Address addrs = 1;
}

message AddOutputRtsRes{
}

message AddInputRtReq{
  RuntimeConfig input_runtime = 1;
}

message AddInputRtRep{
  RuntimeConfig local_runtime = 1;
}

message DeleteOutputRtReq{

  Address addrs = 1;
}

message DeleteOutputRtRep{

}

message DeleteInputRtReq{

  Address addrs = 1;
}

message DeleteInputRtRep{

}


//message for set_migration_target



message MigrationTarget{

  Address migration_target_addr = 1;
  uint64 quota = 2;
}

message MigrationNegotiation{
  Address migration_source_addr = 1;
  repeated RuntimeConfig input_runtimes = 2;
  repeated RuntimeConfig output_runtimes = 3;
  uint64 qouta = 4;
}


message MigrationNegotiationResult{
  bool succeed = 1;
  uint64 qouta = 2;
}

