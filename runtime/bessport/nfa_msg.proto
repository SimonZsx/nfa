syntax = "proto3";

package nfa_msg;

service Runtime_RPC {
  // Sends a greeting
  rpc LivenessCheck (LivenessRequest) returns (LivenessReply) {}
  rpc AddOutputRts (AddOutputRtsReq) returns (AddOutputRtsRes) {}
  rpc AddInputRt (AddInputRtReq) returns (AddInputRtRep) {}
  rpc DeleteOutputRt (DeleteOutputRtReq) returns (DeleteOutputRtRep) {}
  rpc DeleteInputRt (DeleteInputRtReq) returns (DeleteInputRtRep) {}
  rpc SetMigrationTarget (SetMigrationTargetReq) returns (SetMigrationTargetRep){}
  rpc MigrationNegotiate (MigrationNegotiateReq) returns (MigrationNegotiateRep){}
  rpc AddReplicas (AddReplicasReq) returns (AddReplicasRep){}
  rpc ReplicaNegotiate(ReplicaNegotiateReq) returns (ReplicaNegotiateRep){}
  rpc DeleteReplica(DeleteReplicaReq) returns (DeleteReplicaRep){}
  rpc DeleteStorage(DeleteStorageReq) returns (DeleteStorageRep){}
}

message Address{
  string rpc_ip = 1;
  int32 rpc_port = 2;
}

message LivenessRequest {

}

message LivenessReply {

}

message RuntimeConfig{
  int32 runtime_id = 1;
  string input_port_mac = 2;
  string output_port_mac = 3;
  string control_port_mac = 4;
  string rpc_ip = 5;
  int32 rpc_port = 6;
}

message AddOutputRtsReq{
  message Address{
    string rpc_ip = 1;
    int32 rpc_port = 2;
  }
  repeated Address addrs = 1;
}

message AddOutputRtsRes{
}

message AddInputRtReq{
  RuntimeConfig input_runtime = 1;
}

message AddInputRtRep{
  RuntimeConfig local_runtime = 1;
}

message DeleteOutputRtReq{

  Address addrs = 1;
}

message DeleteOutputRtRep{

}

message DeleteInputRtReq{

  Address addrs = 1;
}

message DeleteInputRtRep{

}

message SetMigrationTargetReq{
  Address addr = 1;
  uint64 quota = 2;
}

message SetMigrationTargetRep{
  bool succeed = 1;
}

message MigrationNegotiateReq{
  repeated Address input_runtime_addrs = 1;
  repeated Address output_runtime_addrs = 2;
  uint64 quota = 3;
}

message MigrationNegotiateRep{
  bool succeed = 1;
  uint64 quota = 2;
}


message AddReplicasReq{
  repeated Address addrs = 1;
}


message AddReplicasRep{
}

message ReplicaNegotiateReq{
  RuntimeConfig replication_source_info = 1;
  repeated Address input_runtime_addrs = 2;
  repeated Address output_runtime_addrs = 3;
}

message ReplicaNegotiateRep{
  RuntimeConfig replication_target_info = 1;
}




message DeleteReplicaReq{

  Address addrs = 1;
}

message DeleteReplicaRep{

}



message DeleteStorageReq{

  Address addrs = 1;
}

message DeleteStorageRep{

}

