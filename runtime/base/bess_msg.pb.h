// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bess_msg.proto

#ifndef PROTOBUF_bess_5fmsg_2eproto__INCLUDED
#define PROTOBUF_bess_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "error.pb.h"
// @@protoc_insertion_point(includes)

namespace bess {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_bess_5fmsg_2eproto();
void protobuf_AssignDesc_bess_5fmsg_2eproto();
void protobuf_ShutdownFile_bess_5fmsg_2eproto();

class AddTcRequest;
class AddWorkerRequest;
class AttachTaskRequest;
class ConnectModulesRequest;
class CreateModuleRequest;
class CreateModuleResponse;
class CreatePortRequest;
class CreatePortResponse;
class DestroyModuleRequest;
class DestroyPortRequest;
class DisableTcpdumpRequest;
class DisableTrackRequest;
class DisconnectModulesRequest;
class EmptyArg;
class EmptyRequest;
class EmptyResponse;
class EnableTcpdumpRequest;
class EnableTrackRequest;
class GetDriverInfoRequest;
class GetDriverInfoResponse;
class GetMclassInfoRequest;
class GetMclassInfoResponse;
class GetModuleInfoRequest;
class GetModuleInfoResponse;
class GetModuleInfoResponse_Attribute;
class GetModuleInfoResponse_IGate;
class GetModuleInfoResponse_IGate_OGate;
class GetModuleInfoResponse_OGate;
class GetPortStatsRequest;
class GetPortStatsResponse;
class GetPortStatsResponse_Stat;
class GetTcStatsRequest;
class GetTcStatsResponse;
class ListDriversResponse;
class ListMclassResponse;
class ListModulesResponse;
class ListModulesResponse_Module;
class ListPortsResponse;
class ListTcsRequest;
class ListTcsResponse;
class ListTcsResponse_TrafficClassStatus;
class ListWorkersResponse;
class ListWorkersResponse_WorkerStatus;
class ModuleCommandRequest;
class ModuleCommandResponse;
class Port;
class TrafficClass;
class TrafficClass_Resource;

// ===================================================================

class EmptyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.EmptyRequest) */ {
 public:
  EmptyRequest();
  virtual ~EmptyRequest();

  EmptyRequest(const EmptyRequest& from);

  inline EmptyRequest& operator=(const EmptyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyRequest& default_instance();

  void Swap(EmptyRequest* other);

  // implements Message ----------------------------------------------

  inline EmptyRequest* New() const { return New(NULL); }

  EmptyRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyRequest& from);
  void MergeFrom(const EmptyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.EmptyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static EmptyRequest* default_instance_;
};
// -------------------------------------------------------------------

class EmptyArg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.EmptyArg) */ {
 public:
  EmptyArg();
  virtual ~EmptyArg();

  EmptyArg(const EmptyArg& from);

  inline EmptyArg& operator=(const EmptyArg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyArg& default_instance();

  void Swap(EmptyArg* other);

  // implements Message ----------------------------------------------

  inline EmptyArg* New() const { return New(NULL); }

  EmptyArg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyArg& from);
  void MergeFrom(const EmptyArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyArg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.EmptyArg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static EmptyArg* default_instance_;
};
// -------------------------------------------------------------------

class EmptyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.EmptyResponse) */ {
 public:
  EmptyResponse();
  virtual ~EmptyResponse();

  EmptyResponse(const EmptyResponse& from);

  inline EmptyResponse& operator=(const EmptyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyResponse& default_instance();

  void Swap(EmptyResponse* other);

  // implements Message ----------------------------------------------

  inline EmptyResponse* New() const { return New(NULL); }

  EmptyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyResponse& from);
  void MergeFrom(const EmptyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // @@protoc_insertion_point(class_scope:bess.pb.EmptyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static EmptyResponse* default_instance_;
};
// -------------------------------------------------------------------

class DisableTcpdumpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DisableTcpdumpRequest) */ {
 public:
  DisableTcpdumpRequest();
  virtual ~DisableTcpdumpRequest();

  DisableTcpdumpRequest(const DisableTcpdumpRequest& from);

  inline DisableTcpdumpRequest& operator=(const DisableTcpdumpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisableTcpdumpRequest& default_instance();

  void Swap(DisableTcpdumpRequest* other);

  // implements Message ----------------------------------------------

  inline DisableTcpdumpRequest* New() const { return New(NULL); }

  DisableTcpdumpRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisableTcpdumpRequest& from);
  void MergeFrom(const DisableTcpdumpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableTcpdumpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 gate = 2;
  void clear_gate();
  static const int kGateFieldNumber = 2;
  ::google::protobuf::uint64 gate() const;
  void set_gate(::google::protobuf::uint64 value);

  // optional bool is_igate = 3;
  void clear_is_igate();
  static const int kIsIgateFieldNumber = 3;
  bool is_igate() const;
  void set_is_igate(bool value);

  // @@protoc_insertion_point(class_scope:bess.pb.DisableTcpdumpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 gate_;
  bool is_igate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static DisableTcpdumpRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnableTcpdumpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.EnableTcpdumpRequest) */ {
 public:
  EnableTcpdumpRequest();
  virtual ~EnableTcpdumpRequest();

  EnableTcpdumpRequest(const EnableTcpdumpRequest& from);

  inline EnableTcpdumpRequest& operator=(const EnableTcpdumpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableTcpdumpRequest& default_instance();

  void Swap(EnableTcpdumpRequest* other);

  // implements Message ----------------------------------------------

  inline EnableTcpdumpRequest* New() const { return New(NULL); }

  EnableTcpdumpRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableTcpdumpRequest& from);
  void MergeFrom(const EnableTcpdumpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableTcpdumpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 gate = 2;
  void clear_gate();
  static const int kGateFieldNumber = 2;
  ::google::protobuf::uint64 gate() const;
  void set_gate(::google::protobuf::uint64 value);

  // optional string fifo = 3;
  void clear_fifo();
  static const int kFifoFieldNumber = 3;
  const ::std::string& fifo() const;
  void set_fifo(const ::std::string& value);
  void set_fifo(const char* value);
  void set_fifo(const char* value, size_t size);
  ::std::string* mutable_fifo();
  ::std::string* release_fifo();
  void set_allocated_fifo(::std::string* fifo);

  // optional bool is_igate = 4;
  void clear_is_igate();
  static const int kIsIgateFieldNumber = 4;
  bool is_igate() const;
  void set_is_igate(bool value);

  // @@protoc_insertion_point(class_scope:bess.pb.EnableTcpdumpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 gate_;
  ::google::protobuf::internal::ArenaStringPtr fifo_;
  bool is_igate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static EnableTcpdumpRequest* default_instance_;
};
// -------------------------------------------------------------------

class AttachTaskRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.AttachTaskRequest) */ {
 public:
  AttachTaskRequest();
  virtual ~AttachTaskRequest();

  AttachTaskRequest(const AttachTaskRequest& from);

  inline AttachTaskRequest& operator=(const AttachTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachTaskRequest& default_instance();

  enum IdentifierCase {
    kTc = 3,
    kWid = 4,
    IDENTIFIER_NOT_SET = 0,
  };

  void Swap(AttachTaskRequest* other);

  // implements Message ----------------------------------------------

  inline AttachTaskRequest* New() const { return New(NULL); }

  AttachTaskRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttachTaskRequest& from);
  void MergeFrom(const AttachTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttachTaskRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 taskid = 2;
  void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  ::google::protobuf::uint64 taskid() const;
  void set_taskid(::google::protobuf::uint64 value);

  // optional string tc = 3;
  private:
  bool has_tc() const;
  public:
  void clear_tc();
  static const int kTcFieldNumber = 3;
  const ::std::string& tc() const;
  void set_tc(const ::std::string& value);
  void set_tc(const char* value);
  void set_tc(const char* value, size_t size);
  ::std::string* mutable_tc();
  ::std::string* release_tc();
  void set_allocated_tc(::std::string* tc);

  // optional uint64 wid = 4;
  private:
  bool has_wid() const;
  public:
  void clear_wid();
  static const int kWidFieldNumber = 4;
  ::google::protobuf::uint64 wid() const;
  void set_wid(::google::protobuf::uint64 value);

  IdentifierCase identifier_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.AttachTaskRequest)
 private:
  inline void set_has_tc();
  inline void set_has_wid();

  inline bool has_identifier() const;
  void clear_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 taskid_;
  union IdentifierUnion {
    IdentifierUnion() {}
    ::google::protobuf::internal::ArenaStringPtr tc_;
    ::google::protobuf::uint64 wid_;
  } identifier_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static AttachTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class DisconnectModulesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DisconnectModulesRequest) */ {
 public:
  DisconnectModulesRequest();
  virtual ~DisconnectModulesRequest();

  DisconnectModulesRequest(const DisconnectModulesRequest& from);

  inline DisconnectModulesRequest& operator=(const DisconnectModulesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisconnectModulesRequest& default_instance();

  void Swap(DisconnectModulesRequest* other);

  // implements Message ----------------------------------------------

  inline DisconnectModulesRequest* New() const { return New(NULL); }

  DisconnectModulesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisconnectModulesRequest& from);
  void MergeFrom(const DisconnectModulesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisconnectModulesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 ogate = 2;
  void clear_ogate();
  static const int kOgateFieldNumber = 2;
  ::google::protobuf::uint64 ogate() const;
  void set_ogate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.DisconnectModulesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 ogate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static DisconnectModulesRequest* default_instance_;
};
// -------------------------------------------------------------------

class ConnectModulesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ConnectModulesRequest) */ {
 public:
  ConnectModulesRequest();
  virtual ~ConnectModulesRequest();

  ConnectModulesRequest(const ConnectModulesRequest& from);

  inline ConnectModulesRequest& operator=(const ConnectModulesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectModulesRequest& default_instance();

  void Swap(ConnectModulesRequest* other);

  // implements Message ----------------------------------------------

  inline ConnectModulesRequest* New() const { return New(NULL); }

  ConnectModulesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectModulesRequest& from);
  void MergeFrom(const ConnectModulesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectModulesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m1 = 1;
  void clear_m1();
  static const int kM1FieldNumber = 1;
  const ::std::string& m1() const;
  void set_m1(const ::std::string& value);
  void set_m1(const char* value);
  void set_m1(const char* value, size_t size);
  ::std::string* mutable_m1();
  ::std::string* release_m1();
  void set_allocated_m1(::std::string* m1);

  // optional string m2 = 2;
  void clear_m2();
  static const int kM2FieldNumber = 2;
  const ::std::string& m2() const;
  void set_m2(const ::std::string& value);
  void set_m2(const char* value);
  void set_m2(const char* value, size_t size);
  ::std::string* mutable_m2();
  ::std::string* release_m2();
  void set_allocated_m2(::std::string* m2);

  // optional uint64 ogate = 3;
  void clear_ogate();
  static const int kOgateFieldNumber = 3;
  ::google::protobuf::uint64 ogate() const;
  void set_ogate(::google::protobuf::uint64 value);

  // optional uint64 igate = 4;
  void clear_igate();
  static const int kIgateFieldNumber = 4;
  ::google::protobuf::uint64 igate() const;
  void set_igate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.ConnectModulesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr m1_;
  ::google::protobuf::internal::ArenaStringPtr m2_;
  ::google::protobuf::uint64 ogate_;
  ::google::protobuf::uint64 igate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ConnectModulesRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoResponse_IGate_OGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoResponse.IGate.OGate) */ {
 public:
  GetModuleInfoResponse_IGate_OGate();
  virtual ~GetModuleInfoResponse_IGate_OGate();

  GetModuleInfoResponse_IGate_OGate(const GetModuleInfoResponse_IGate_OGate& from);

  inline GetModuleInfoResponse_IGate_OGate& operator=(const GetModuleInfoResponse_IGate_OGate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoResponse_IGate_OGate& default_instance();

  void Swap(GetModuleInfoResponse_IGate_OGate* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoResponse_IGate_OGate* New() const { return New(NULL); }

  GetModuleInfoResponse_IGate_OGate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoResponse_IGate_OGate& from);
  void MergeFrom(const GetModuleInfoResponse_IGate_OGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoResponse_IGate_OGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ogate = 1;
  void clear_ogate();
  static const int kOgateFieldNumber = 1;
  ::google::protobuf::uint64 ogate() const;
  void set_ogate(::google::protobuf::uint64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoResponse.IGate.OGate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 ogate_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoResponse_IGate_OGate* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoResponse_IGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoResponse.IGate) */ {
 public:
  GetModuleInfoResponse_IGate();
  virtual ~GetModuleInfoResponse_IGate();

  GetModuleInfoResponse_IGate(const GetModuleInfoResponse_IGate& from);

  inline GetModuleInfoResponse_IGate& operator=(const GetModuleInfoResponse_IGate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoResponse_IGate& default_instance();

  void Swap(GetModuleInfoResponse_IGate* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoResponse_IGate* New() const { return New(NULL); }

  GetModuleInfoResponse_IGate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoResponse_IGate& from);
  void MergeFrom(const GetModuleInfoResponse_IGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoResponse_IGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetModuleInfoResponse_IGate_OGate OGate;

  // accessors -------------------------------------------------------

  // optional uint64 igate = 1;
  void clear_igate();
  static const int kIgateFieldNumber = 1;
  ::google::protobuf::uint64 igate() const;
  void set_igate(::google::protobuf::uint64 value);

  // repeated .bess.pb.GetModuleInfoResponse.IGate.OGate ogates = 2;
  int ogates_size() const;
  void clear_ogates();
  static const int kOgatesFieldNumber = 2;
  const ::bess::pb::GetModuleInfoResponse_IGate_OGate& ogates(int index) const;
  ::bess::pb::GetModuleInfoResponse_IGate_OGate* mutable_ogates(int index);
  ::bess::pb::GetModuleInfoResponse_IGate_OGate* add_ogates();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate_OGate >*
      mutable_ogates();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate_OGate >&
      ogates() const;

  // optional uint64 cnt = 3;
  void clear_cnt();
  static const int kCntFieldNumber = 3;
  ::google::protobuf::uint64 cnt() const;
  void set_cnt(::google::protobuf::uint64 value);

  // optional uint64 pkts = 4;
  void clear_pkts();
  static const int kPktsFieldNumber = 4;
  ::google::protobuf::uint64 pkts() const;
  void set_pkts(::google::protobuf::uint64 value);

  // optional double timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoResponse.IGate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 igate_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate_OGate > ogates_;
  ::google::protobuf::uint64 cnt_;
  ::google::protobuf::uint64 pkts_;
  double timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoResponse_IGate* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoResponse_OGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoResponse.OGate) */ {
 public:
  GetModuleInfoResponse_OGate();
  virtual ~GetModuleInfoResponse_OGate();

  GetModuleInfoResponse_OGate(const GetModuleInfoResponse_OGate& from);

  inline GetModuleInfoResponse_OGate& operator=(const GetModuleInfoResponse_OGate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoResponse_OGate& default_instance();

  void Swap(GetModuleInfoResponse_OGate* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoResponse_OGate* New() const { return New(NULL); }

  GetModuleInfoResponse_OGate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoResponse_OGate& from);
  void MergeFrom(const GetModuleInfoResponse_OGate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoResponse_OGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ogate = 1;
  void clear_ogate();
  static const int kOgateFieldNumber = 1;
  ::google::protobuf::uint64 ogate() const;
  void set_ogate(::google::protobuf::uint64 value);

  // optional uint64 cnt = 2;
  void clear_cnt();
  static const int kCntFieldNumber = 2;
  ::google::protobuf::uint64 cnt() const;
  void set_cnt(::google::protobuf::uint64 value);

  // optional uint64 pkts = 3;
  void clear_pkts();
  static const int kPktsFieldNumber = 3;
  ::google::protobuf::uint64 pkts() const;
  void set_pkts(::google::protobuf::uint64 value);

  // optional double timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // optional string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 igate = 6;
  void clear_igate();
  static const int kIgateFieldNumber = 6;
  ::google::protobuf::uint64 igate() const;
  void set_igate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoResponse.OGate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 ogate_;
  ::google::protobuf::uint64 cnt_;
  ::google::protobuf::uint64 pkts_;
  double timestamp_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 igate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoResponse_OGate* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoResponse_Attribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoResponse.Attribute) */ {
 public:
  GetModuleInfoResponse_Attribute();
  virtual ~GetModuleInfoResponse_Attribute();

  GetModuleInfoResponse_Attribute(const GetModuleInfoResponse_Attribute& from);

  inline GetModuleInfoResponse_Attribute& operator=(const GetModuleInfoResponse_Attribute& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoResponse_Attribute& default_instance();

  void Swap(GetModuleInfoResponse_Attribute* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoResponse_Attribute* New() const { return New(NULL); }

  GetModuleInfoResponse_Attribute* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoResponse_Attribute& from);
  void MergeFrom(const GetModuleInfoResponse_Attribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoResponse_Attribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // optional string mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  const ::std::string& mode() const;
  void set_mode(const ::std::string& value);
  void set_mode(const char* value);
  void set_mode(const char* value, size_t size);
  ::std::string* mutable_mode();
  ::std::string* release_mode();
  void set_allocated_mode(::std::string* mode);

  // optional int64 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoResponse.Attribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::internal::ArenaStringPtr mode_;
  ::google::protobuf::int64 offset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoResponse_Attribute* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoResponse) */ {
 public:
  GetModuleInfoResponse();
  virtual ~GetModuleInfoResponse();

  GetModuleInfoResponse(const GetModuleInfoResponse& from);

  inline GetModuleInfoResponse& operator=(const GetModuleInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoResponse& default_instance();

  void Swap(GetModuleInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoResponse* New() const { return New(NULL); }

  GetModuleInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoResponse& from);
  void MergeFrom(const GetModuleInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetModuleInfoResponse_IGate IGate;
  typedef GetModuleInfoResponse_OGate OGate;
  typedef GetModuleInfoResponse_Attribute Attribute;

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string mclass = 3;
  void clear_mclass();
  static const int kMclassFieldNumber = 3;
  const ::std::string& mclass() const;
  void set_mclass(const ::std::string& value);
  void set_mclass(const char* value);
  void set_mclass(const char* value, size_t size);
  ::std::string* mutable_mclass();
  ::std::string* release_mclass();
  void set_allocated_mclass(::std::string* mclass);

  // optional string desc = 4;
  void clear_desc();
  static const int kDescFieldNumber = 4;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // repeated .bess.pb.GetModuleInfoResponse.IGate igates = 6;
  int igates_size() const;
  void clear_igates();
  static const int kIgatesFieldNumber = 6;
  const ::bess::pb::GetModuleInfoResponse_IGate& igates(int index) const;
  ::bess::pb::GetModuleInfoResponse_IGate* mutable_igates(int index);
  ::bess::pb::GetModuleInfoResponse_IGate* add_igates();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate >*
      mutable_igates();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate >&
      igates() const;

  // repeated .bess.pb.GetModuleInfoResponse.OGate ogates = 7;
  int ogates_size() const;
  void clear_ogates();
  static const int kOgatesFieldNumber = 7;
  const ::bess::pb::GetModuleInfoResponse_OGate& ogates(int index) const;
  ::bess::pb::GetModuleInfoResponse_OGate* mutable_ogates(int index);
  ::bess::pb::GetModuleInfoResponse_OGate* add_ogates();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_OGate >*
      mutable_ogates();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_OGate >&
      ogates() const;

  // repeated .bess.pb.GetModuleInfoResponse.Attribute metadata = 8;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 8;
  const ::bess::pb::GetModuleInfoResponse_Attribute& metadata(int index) const;
  ::bess::pb::GetModuleInfoResponse_Attribute* mutable_metadata(int index);
  ::bess::pb::GetModuleInfoResponse_Attribute* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_Attribute >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_Attribute >&
      metadata() const;

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mclass_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate > igates_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_OGate > ogates_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_Attribute > metadata_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetModuleInfoRequest) */ {
 public:
  GetModuleInfoRequest();
  virtual ~GetModuleInfoRequest();

  GetModuleInfoRequest(const GetModuleInfoRequest& from);

  inline GetModuleInfoRequest& operator=(const GetModuleInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModuleInfoRequest& default_instance();

  void Swap(GetModuleInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetModuleInfoRequest* New() const { return New(NULL); }

  GetModuleInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModuleInfoRequest& from);
  void MergeFrom(const GetModuleInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetModuleInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetModuleInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetModuleInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class DestroyModuleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DestroyModuleRequest) */ {
 public:
  DestroyModuleRequest();
  virtual ~DestroyModuleRequest();

  DestroyModuleRequest(const DestroyModuleRequest& from);

  inline DestroyModuleRequest& operator=(const DestroyModuleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyModuleRequest& default_instance();

  void Swap(DestroyModuleRequest* other);

  // implements Message ----------------------------------------------

  inline DestroyModuleRequest* New() const { return New(NULL); }

  DestroyModuleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyModuleRequest& from);
  void MergeFrom(const DestroyModuleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyModuleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.DestroyModuleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static DestroyModuleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateModuleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.CreateModuleResponse) */ {
 public:
  CreateModuleResponse();
  virtual ~CreateModuleResponse();

  CreateModuleResponse(const CreateModuleResponse& from);

  inline CreateModuleResponse& operator=(const CreateModuleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateModuleResponse& default_instance();

  void Swap(CreateModuleResponse* other);

  // implements Message ----------------------------------------------

  inline CreateModuleResponse* New() const { return New(NULL); }

  CreateModuleResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateModuleResponse& from);
  void MergeFrom(const CreateModuleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateModuleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.CreateModuleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static CreateModuleResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListModulesResponse_Module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListModulesResponse.Module) */ {
 public:
  ListModulesResponse_Module();
  virtual ~ListModulesResponse_Module();

  ListModulesResponse_Module(const ListModulesResponse_Module& from);

  inline ListModulesResponse_Module& operator=(const ListModulesResponse_Module& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModulesResponse_Module& default_instance();

  void Swap(ListModulesResponse_Module* other);

  // implements Message ----------------------------------------------

  inline ListModulesResponse_Module* New() const { return New(NULL); }

  ListModulesResponse_Module* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListModulesResponse_Module& from);
  void MergeFrom(const ListModulesResponse_Module& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListModulesResponse_Module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string mclass = 2;
  void clear_mclass();
  static const int kMclassFieldNumber = 2;
  const ::std::string& mclass() const;
  void set_mclass(const ::std::string& value);
  void set_mclass(const char* value);
  void set_mclass(const char* value, size_t size);
  ::std::string* mutable_mclass();
  ::std::string* release_mclass();
  void set_allocated_mclass(::std::string* mclass);

  // optional string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:bess.pb.ListModulesResponse.Module)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mclass_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListModulesResponse_Module* default_instance_;
};
// -------------------------------------------------------------------

class ListModulesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListModulesResponse) */ {
 public:
  ListModulesResponse();
  virtual ~ListModulesResponse();

  ListModulesResponse(const ListModulesResponse& from);

  inline ListModulesResponse& operator=(const ListModulesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModulesResponse& default_instance();

  void Swap(ListModulesResponse* other);

  // implements Message ----------------------------------------------

  inline ListModulesResponse* New() const { return New(NULL); }

  ListModulesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListModulesResponse& from);
  void MergeFrom(const ListModulesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListModulesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ListModulesResponse_Module Module;

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated .bess.pb.ListModulesResponse.Module modules = 2;
  int modules_size() const;
  void clear_modules();
  static const int kModulesFieldNumber = 2;
  const ::bess::pb::ListModulesResponse_Module& modules(int index) const;
  ::bess::pb::ListModulesResponse_Module* mutable_modules(int index);
  ::bess::pb::ListModulesResponse_Module* add_modules();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListModulesResponse_Module >*
      mutable_modules();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListModulesResponse_Module >&
      modules() const;

  // @@protoc_insertion_point(class_scope:bess.pb.ListModulesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListModulesResponse_Module > modules_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListModulesResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetPortStatsResponse_Stat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetPortStatsResponse.Stat) */ {
 public:
  GetPortStatsResponse_Stat();
  virtual ~GetPortStatsResponse_Stat();

  GetPortStatsResponse_Stat(const GetPortStatsResponse_Stat& from);

  inline GetPortStatsResponse_Stat& operator=(const GetPortStatsResponse_Stat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPortStatsResponse_Stat& default_instance();

  void Swap(GetPortStatsResponse_Stat* other);

  // implements Message ----------------------------------------------

  inline GetPortStatsResponse_Stat* New() const { return New(NULL); }

  GetPortStatsResponse_Stat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPortStatsResponse_Stat& from);
  void MergeFrom(const GetPortStatsResponse_Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPortStatsResponse_Stat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 packets = 1;
  void clear_packets();
  static const int kPacketsFieldNumber = 1;
  ::google::protobuf::uint64 packets() const;
  void set_packets(::google::protobuf::uint64 value);

  // optional uint64 dropped = 2;
  void clear_dropped();
  static const int kDroppedFieldNumber = 2;
  ::google::protobuf::uint64 dropped() const;
  void set_dropped(::google::protobuf::uint64 value);

  // optional uint64 bytes = 3;
  void clear_bytes();
  static const int kBytesFieldNumber = 3;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetPortStatsResponse.Stat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 packets_;
  ::google::protobuf::uint64 dropped_;
  ::google::protobuf::uint64 bytes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetPortStatsResponse_Stat* default_instance_;
};
// -------------------------------------------------------------------

class GetPortStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetPortStatsResponse) */ {
 public:
  GetPortStatsResponse();
  virtual ~GetPortStatsResponse();

  GetPortStatsResponse(const GetPortStatsResponse& from);

  inline GetPortStatsResponse& operator=(const GetPortStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPortStatsResponse& default_instance();

  void Swap(GetPortStatsResponse* other);

  // implements Message ----------------------------------------------

  inline GetPortStatsResponse* New() const { return New(NULL); }

  GetPortStatsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPortStatsResponse& from);
  void MergeFrom(const GetPortStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPortStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetPortStatsResponse_Stat Stat;

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional .bess.pb.GetPortStatsResponse.Stat inc = 2;
  bool has_inc() const;
  void clear_inc();
  static const int kIncFieldNumber = 2;
  const ::bess::pb::GetPortStatsResponse_Stat& inc() const;
  ::bess::pb::GetPortStatsResponse_Stat* mutable_inc();
  ::bess::pb::GetPortStatsResponse_Stat* release_inc();
  void set_allocated_inc(::bess::pb::GetPortStatsResponse_Stat* inc);

  // optional .bess.pb.GetPortStatsResponse.Stat out = 3;
  bool has_out() const;
  void clear_out();
  static const int kOutFieldNumber = 3;
  const ::bess::pb::GetPortStatsResponse_Stat& out() const;
  ::bess::pb::GetPortStatsResponse_Stat* mutable_out();
  ::bess::pb::GetPortStatsResponse_Stat* release_out();
  void set_allocated_out(::bess::pb::GetPortStatsResponse_Stat* out);

  // optional double timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetPortStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::bess::pb::GetPortStatsResponse_Stat* inc_;
  ::bess::pb::GetPortStatsResponse_Stat* out_;
  double timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetPortStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetPortStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetPortStatsRequest) */ {
 public:
  GetPortStatsRequest();
  virtual ~GetPortStatsRequest();

  GetPortStatsRequest(const GetPortStatsRequest& from);

  inline GetPortStatsRequest& operator=(const GetPortStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPortStatsRequest& default_instance();

  void Swap(GetPortStatsRequest* other);

  // implements Message ----------------------------------------------

  inline GetPortStatsRequest* New() const { return New(NULL); }

  GetPortStatsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPortStatsRequest& from);
  void MergeFrom(const GetPortStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPortStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetPortStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetPortStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class DestroyPortRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DestroyPortRequest) */ {
 public:
  DestroyPortRequest();
  virtual ~DestroyPortRequest();

  DestroyPortRequest(const DestroyPortRequest& from);

  inline DestroyPortRequest& operator=(const DestroyPortRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyPortRequest& default_instance();

  void Swap(DestroyPortRequest* other);

  // implements Message ----------------------------------------------

  inline DestroyPortRequest* New() const { return New(NULL); }

  DestroyPortRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyPortRequest& from);
  void MergeFrom(const DestroyPortRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyPortRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.DestroyPortRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static DestroyPortRequest* default_instance_;
};
// -------------------------------------------------------------------

class Port : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.Port) */ {
 public:
  Port();
  virtual ~Port();

  Port(const Port& from);

  inline Port& operator=(const Port& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Port& default_instance();

  void Swap(Port* other);

  // implements Message ----------------------------------------------

  inline Port* New() const { return New(NULL); }

  Port* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Port& from);
  void MergeFrom(const Port& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Port* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string driver = 2;
  void clear_driver();
  static const int kDriverFieldNumber = 2;
  const ::std::string& driver() const;
  void set_driver(const ::std::string& value);
  void set_driver(const char* value);
  void set_driver(const char* value, size_t size);
  ::std::string* mutable_driver();
  ::std::string* release_driver();
  void set_allocated_driver(::std::string* driver);

  // @@protoc_insertion_point(class_scope:bess.pb.Port)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr driver_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static Port* default_instance_;
};
// -------------------------------------------------------------------

class ListPortsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListPortsResponse) */ {
 public:
  ListPortsResponse();
  virtual ~ListPortsResponse();

  ListPortsResponse(const ListPortsResponse& from);

  inline ListPortsResponse& operator=(const ListPortsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListPortsResponse& default_instance();

  void Swap(ListPortsResponse* other);

  // implements Message ----------------------------------------------

  inline ListPortsResponse* New() const { return New(NULL); }

  ListPortsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListPortsResponse& from);
  void MergeFrom(const ListPortsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListPortsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated .bess.pb.Port ports = 2;
  int ports_size() const;
  void clear_ports();
  static const int kPortsFieldNumber = 2;
  const ::bess::pb::Port& ports(int index) const;
  ::bess::pb::Port* mutable_ports(int index);
  ::bess::pb::Port* add_ports();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Port >*
      mutable_ports();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::Port >&
      ports() const;

  // @@protoc_insertion_point(class_scope:bess.pb.ListPortsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Port > ports_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListPortsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListWorkersResponse_WorkerStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListWorkersResponse.WorkerStatus) */ {
 public:
  ListWorkersResponse_WorkerStatus();
  virtual ~ListWorkersResponse_WorkerStatus();

  ListWorkersResponse_WorkerStatus(const ListWorkersResponse_WorkerStatus& from);

  inline ListWorkersResponse_WorkerStatus& operator=(const ListWorkersResponse_WorkerStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWorkersResponse_WorkerStatus& default_instance();

  void Swap(ListWorkersResponse_WorkerStatus* other);

  // implements Message ----------------------------------------------

  inline ListWorkersResponse_WorkerStatus* New() const { return New(NULL); }

  ListWorkersResponse_WorkerStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListWorkersResponse_WorkerStatus& from);
  void MergeFrom(const ListWorkersResponse_WorkerStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListWorkersResponse_WorkerStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 wid = 1;
  void clear_wid();
  static const int kWidFieldNumber = 1;
  ::google::protobuf::int64 wid() const;
  void set_wid(::google::protobuf::int64 value);

  // optional int64 core = 2;
  void clear_core();
  static const int kCoreFieldNumber = 2;
  ::google::protobuf::int64 core() const;
  void set_core(::google::protobuf::int64 value);

  // optional int64 running = 3;
  void clear_running();
  static const int kRunningFieldNumber = 3;
  ::google::protobuf::int64 running() const;
  void set_running(::google::protobuf::int64 value);

  // optional int64 num_tcs = 4;
  void clear_num_tcs();
  static const int kNumTcsFieldNumber = 4;
  ::google::protobuf::int64 num_tcs() const;
  void set_num_tcs(::google::protobuf::int64 value);

  // optional int64 silent_drops = 5;
  void clear_silent_drops();
  static const int kSilentDropsFieldNumber = 5;
  ::google::protobuf::int64 silent_drops() const;
  void set_silent_drops(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.ListWorkersResponse.WorkerStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 wid_;
  ::google::protobuf::int64 core_;
  ::google::protobuf::int64 running_;
  ::google::protobuf::int64 num_tcs_;
  ::google::protobuf::int64 silent_drops_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListWorkersResponse_WorkerStatus* default_instance_;
};
// -------------------------------------------------------------------

class ListWorkersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListWorkersResponse) */ {
 public:
  ListWorkersResponse();
  virtual ~ListWorkersResponse();

  ListWorkersResponse(const ListWorkersResponse& from);

  inline ListWorkersResponse& operator=(const ListWorkersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWorkersResponse& default_instance();

  void Swap(ListWorkersResponse* other);

  // implements Message ----------------------------------------------

  inline ListWorkersResponse* New() const { return New(NULL); }

  ListWorkersResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListWorkersResponse& from);
  void MergeFrom(const ListWorkersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListWorkersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ListWorkersResponse_WorkerStatus WorkerStatus;

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated .bess.pb.ListWorkersResponse.WorkerStatus workers_status = 2;
  int workers_status_size() const;
  void clear_workers_status();
  static const int kWorkersStatusFieldNumber = 2;
  const ::bess::pb::ListWorkersResponse_WorkerStatus& workers_status(int index) const;
  ::bess::pb::ListWorkersResponse_WorkerStatus* mutable_workers_status(int index);
  ::bess::pb::ListWorkersResponse_WorkerStatus* add_workers_status();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListWorkersResponse_WorkerStatus >*
      mutable_workers_status();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListWorkersResponse_WorkerStatus >&
      workers_status() const;

  // @@protoc_insertion_point(class_scope:bess.pb.ListWorkersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListWorkersResponse_WorkerStatus > workers_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListWorkersResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddWorkerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.AddWorkerRequest) */ {
 public:
  AddWorkerRequest();
  virtual ~AddWorkerRequest();

  AddWorkerRequest(const AddWorkerRequest& from);

  inline AddWorkerRequest& operator=(const AddWorkerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddWorkerRequest& default_instance();

  void Swap(AddWorkerRequest* other);

  // implements Message ----------------------------------------------

  inline AddWorkerRequest* New() const { return New(NULL); }

  AddWorkerRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddWorkerRequest& from);
  void MergeFrom(const AddWorkerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddWorkerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 wid = 1;
  void clear_wid();
  static const int kWidFieldNumber = 1;
  ::google::protobuf::int64 wid() const;
  void set_wid(::google::protobuf::int64 value);

  // optional int64 core = 2;
  void clear_core();
  static const int kCoreFieldNumber = 2;
  ::google::protobuf::int64 core() const;
  void set_core(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.AddWorkerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 wid_;
  ::google::protobuf::int64 core_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static AddWorkerRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListTcsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListTcsRequest) */ {
 public:
  ListTcsRequest();
  virtual ~ListTcsRequest();

  ListTcsRequest(const ListTcsRequest& from);

  inline ListTcsRequest& operator=(const ListTcsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTcsRequest& default_instance();

  void Swap(ListTcsRequest* other);

  // implements Message ----------------------------------------------

  inline ListTcsRequest* New() const { return New(NULL); }

  ListTcsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTcsRequest& from);
  void MergeFrom(const ListTcsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTcsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 wid = 1;
  void clear_wid();
  static const int kWidFieldNumber = 1;
  ::google::protobuf::int64 wid() const;
  void set_wid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.ListTcsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 wid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListTcsRequest* default_instance_;
};
// -------------------------------------------------------------------

class TrafficClass_Resource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.TrafficClass.Resource) */ {
 public:
  TrafficClass_Resource();
  virtual ~TrafficClass_Resource();

  TrafficClass_Resource(const TrafficClass_Resource& from);

  inline TrafficClass_Resource& operator=(const TrafficClass_Resource& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrafficClass_Resource& default_instance();

  void Swap(TrafficClass_Resource* other);

  // implements Message ----------------------------------------------

  inline TrafficClass_Resource* New() const { return New(NULL); }

  TrafficClass_Resource* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrafficClass_Resource& from);
  void MergeFrom(const TrafficClass_Resource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrafficClass_Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 schedules = 1;
  void clear_schedules();
  static const int kSchedulesFieldNumber = 1;
  ::google::protobuf::int64 schedules() const;
  void set_schedules(::google::protobuf::int64 value);

  // optional int64 cycles = 2;
  void clear_cycles();
  static const int kCyclesFieldNumber = 2;
  ::google::protobuf::int64 cycles() const;
  void set_cycles(::google::protobuf::int64 value);

  // optional int64 packets = 3;
  void clear_packets();
  static const int kPacketsFieldNumber = 3;
  ::google::protobuf::int64 packets() const;
  void set_packets(::google::protobuf::int64 value);

  // optional int64 bits = 4;
  void clear_bits();
  static const int kBitsFieldNumber = 4;
  ::google::protobuf::int64 bits() const;
  void set_bits(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.TrafficClass.Resource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 schedules_;
  ::google::protobuf::int64 cycles_;
  ::google::protobuf::int64 packets_;
  ::google::protobuf::int64 bits_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static TrafficClass_Resource* default_instance_;
};
// -------------------------------------------------------------------

class TrafficClass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.TrafficClass) */ {
 public:
  TrafficClass();
  virtual ~TrafficClass();

  TrafficClass(const TrafficClass& from);

  inline TrafficClass& operator=(const TrafficClass& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrafficClass& default_instance();

  void Swap(TrafficClass* other);

  // implements Message ----------------------------------------------

  inline TrafficClass* New() const { return New(NULL); }

  TrafficClass* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrafficClass& from);
  void MergeFrom(const TrafficClass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrafficClass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TrafficClass_Resource Resource;

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 priority = 2;
  void clear_priority();
  static const int kPriorityFieldNumber = 2;
  ::google::protobuf::int64 priority() const;
  void set_priority(::google::protobuf::int64 value);

  // optional int64 wid = 3;
  void clear_wid();
  static const int kWidFieldNumber = 3;
  ::google::protobuf::int64 wid() const;
  void set_wid(::google::protobuf::int64 value);

  // optional .bess.pb.TrafficClass.Resource limit = 4;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  const ::bess::pb::TrafficClass_Resource& limit() const;
  ::bess::pb::TrafficClass_Resource* mutable_limit();
  ::bess::pb::TrafficClass_Resource* release_limit();
  void set_allocated_limit(::bess::pb::TrafficClass_Resource* limit);

  // optional .bess.pb.TrafficClass.Resource max_burst = 5;
  bool has_max_burst() const;
  void clear_max_burst();
  static const int kMaxBurstFieldNumber = 5;
  const ::bess::pb::TrafficClass_Resource& max_burst() const;
  ::bess::pb::TrafficClass_Resource* mutable_max_burst();
  ::bess::pb::TrafficClass_Resource* release_max_burst();
  void set_allocated_max_burst(::bess::pb::TrafficClass_Resource* max_burst);

  // @@protoc_insertion_point(class_scope:bess.pb.TrafficClass)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 priority_;
  ::google::protobuf::int64 wid_;
  ::bess::pb::TrafficClass_Resource* limit_;
  ::bess::pb::TrafficClass_Resource* max_burst_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static TrafficClass* default_instance_;
};
// -------------------------------------------------------------------

class GetTcStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetTcStatsResponse) */ {
 public:
  GetTcStatsResponse();
  virtual ~GetTcStatsResponse();

  GetTcStatsResponse(const GetTcStatsResponse& from);

  inline GetTcStatsResponse& operator=(const GetTcStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTcStatsResponse& default_instance();

  void Swap(GetTcStatsResponse* other);

  // implements Message ----------------------------------------------

  inline GetTcStatsResponse* New() const { return New(NULL); }

  GetTcStatsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTcStatsResponse& from);
  void MergeFrom(const GetTcStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTcStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional double timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // optional uint64 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // optional uint64 cycles = 4;
  void clear_cycles();
  static const int kCyclesFieldNumber = 4;
  ::google::protobuf::uint64 cycles() const;
  void set_cycles(::google::protobuf::uint64 value);

  // optional uint64 packets = 5;
  void clear_packets();
  static const int kPacketsFieldNumber = 5;
  ::google::protobuf::uint64 packets() const;
  void set_packets(::google::protobuf::uint64 value);

  // optional uint64 bits = 6;
  void clear_bits();
  static const int kBitsFieldNumber = 6;
  ::google::protobuf::uint64 bits() const;
  void set_bits(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.GetTcStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  double timestamp_;
  ::google::protobuf::uint64 count_;
  ::google::protobuf::uint64 cycles_;
  ::google::protobuf::uint64 packets_;
  ::google::protobuf::uint64 bits_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetTcStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListTcsResponse_TrafficClassStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListTcsResponse.TrafficClassStatus) */ {
 public:
  ListTcsResponse_TrafficClassStatus();
  virtual ~ListTcsResponse_TrafficClassStatus();

  ListTcsResponse_TrafficClassStatus(const ListTcsResponse_TrafficClassStatus& from);

  inline ListTcsResponse_TrafficClassStatus& operator=(const ListTcsResponse_TrafficClassStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTcsResponse_TrafficClassStatus& default_instance();

  void Swap(ListTcsResponse_TrafficClassStatus* other);

  // implements Message ----------------------------------------------

  inline ListTcsResponse_TrafficClassStatus* New() const { return New(NULL); }

  ListTcsResponse_TrafficClassStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTcsResponse_TrafficClassStatus& from);
  void MergeFrom(const ListTcsResponse_TrafficClassStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTcsResponse_TrafficClassStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.TrafficClass class = 1;
  bool has_class_() const;
  void clear_class_();
  static const int kClassFieldNumber = 1;
  const ::bess::pb::TrafficClass& class_() const;
  ::bess::pb::TrafficClass* mutable_class_();
  ::bess::pb::TrafficClass* release_class_();
  void set_allocated_class_(::bess::pb::TrafficClass* class_);

  // optional string parent = 2;
  void clear_parent();
  static const int kParentFieldNumber = 2;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // optional int64 tasks = 3;
  void clear_tasks();
  static const int kTasksFieldNumber = 3;
  ::google::protobuf::int64 tasks() const;
  void set_tasks(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bess.pb.ListTcsResponse.TrafficClassStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::TrafficClass* class__;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::int64 tasks_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListTcsResponse_TrafficClassStatus* default_instance_;
};
// -------------------------------------------------------------------

class ListTcsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListTcsResponse) */ {
 public:
  ListTcsResponse();
  virtual ~ListTcsResponse();

  ListTcsResponse(const ListTcsResponse& from);

  inline ListTcsResponse& operator=(const ListTcsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTcsResponse& default_instance();

  void Swap(ListTcsResponse* other);

  // implements Message ----------------------------------------------

  inline ListTcsResponse* New() const { return New(NULL); }

  ListTcsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTcsResponse& from);
  void MergeFrom(const ListTcsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTcsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ListTcsResponse_TrafficClassStatus TrafficClassStatus;

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated .bess.pb.ListTcsResponse.TrafficClassStatus classes_status = 2;
  int classes_status_size() const;
  void clear_classes_status();
  static const int kClassesStatusFieldNumber = 2;
  const ::bess::pb::ListTcsResponse_TrafficClassStatus& classes_status(int index) const;
  ::bess::pb::ListTcsResponse_TrafficClassStatus* mutable_classes_status(int index);
  ::bess::pb::ListTcsResponse_TrafficClassStatus* add_classes_status();
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListTcsResponse_TrafficClassStatus >*
      mutable_classes_status();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListTcsResponse_TrafficClassStatus >&
      classes_status() const;

  // @@protoc_insertion_point(class_scope:bess.pb.ListTcsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ListTcsResponse_TrafficClassStatus > classes_status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListTcsResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddTcRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.AddTcRequest) */ {
 public:
  AddTcRequest();
  virtual ~AddTcRequest();

  AddTcRequest(const AddTcRequest& from);

  inline AddTcRequest& operator=(const AddTcRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddTcRequest& default_instance();

  void Swap(AddTcRequest* other);

  // implements Message ----------------------------------------------

  inline AddTcRequest* New() const { return New(NULL); }

  AddTcRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddTcRequest& from);
  void MergeFrom(const AddTcRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddTcRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.TrafficClass class = 1;
  bool has_class_() const;
  void clear_class_();
  static const int kClassFieldNumber = 1;
  const ::bess::pb::TrafficClass& class_() const;
  ::bess::pb::TrafficClass* mutable_class_();
  ::bess::pb::TrafficClass* release_class_();
  void set_allocated_class_(::bess::pb::TrafficClass* class_);

  // @@protoc_insertion_point(class_scope:bess.pb.AddTcRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::TrafficClass* class__;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static AddTcRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTcStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetTcStatsRequest) */ {
 public:
  GetTcStatsRequest();
  virtual ~GetTcStatsRequest();

  GetTcStatsRequest(const GetTcStatsRequest& from);

  inline GetTcStatsRequest& operator=(const GetTcStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTcStatsRequest& default_instance();

  void Swap(GetTcStatsRequest* other);

  // implements Message ----------------------------------------------

  inline GetTcStatsRequest* New() const { return New(NULL); }

  GetTcStatsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTcStatsRequest& from);
  void MergeFrom(const GetTcStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTcStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetTcStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetTcStatsRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListDriversResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListDriversResponse) */ {
 public:
  ListDriversResponse();
  virtual ~ListDriversResponse();

  ListDriversResponse(const ListDriversResponse& from);

  inline ListDriversResponse& operator=(const ListDriversResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDriversResponse& default_instance();

  void Swap(ListDriversResponse* other);

  // implements Message ----------------------------------------------

  inline ListDriversResponse* New() const { return New(NULL); }

  ListDriversResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListDriversResponse& from);
  void MergeFrom(const ListDriversResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListDriversResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated string driver_names = 2;
  int driver_names_size() const;
  void clear_driver_names();
  static const int kDriverNamesFieldNumber = 2;
  const ::std::string& driver_names(int index) const;
  ::std::string* mutable_driver_names(int index);
  void set_driver_names(int index, const ::std::string& value);
  void set_driver_names(int index, const char* value);
  void set_driver_names(int index, const char* value, size_t size);
  ::std::string* add_driver_names();
  void add_driver_names(const ::std::string& value);
  void add_driver_names(const char* value);
  void add_driver_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& driver_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_driver_names();

  // @@protoc_insertion_point(class_scope:bess.pb.ListDriversResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::std::string> driver_names_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListDriversResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetDriverInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetDriverInfoRequest) */ {
 public:
  GetDriverInfoRequest();
  virtual ~GetDriverInfoRequest();

  GetDriverInfoRequest(const GetDriverInfoRequest& from);

  inline GetDriverInfoRequest& operator=(const GetDriverInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDriverInfoRequest& default_instance();

  void Swap(GetDriverInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetDriverInfoRequest* New() const { return New(NULL); }

  GetDriverInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDriverInfoRequest& from);
  void MergeFrom(const GetDriverInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetDriverInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string driver_name = 1;
  void clear_driver_name();
  static const int kDriverNameFieldNumber = 1;
  const ::std::string& driver_name() const;
  void set_driver_name(const ::std::string& value);
  void set_driver_name(const char* value);
  void set_driver_name(const char* value, size_t size);
  ::std::string* mutable_driver_name();
  ::std::string* release_driver_name();
  void set_allocated_driver_name(::std::string* driver_name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetDriverInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr driver_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetDriverInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDriverInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetDriverInfoResponse) */ {
 public:
  GetDriverInfoResponse();
  virtual ~GetDriverInfoResponse();

  GetDriverInfoResponse(const GetDriverInfoResponse& from);

  inline GetDriverInfoResponse& operator=(const GetDriverInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDriverInfoResponse& default_instance();

  void Swap(GetDriverInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetDriverInfoResponse* New() const { return New(NULL); }

  GetDriverInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDriverInfoResponse& from);
  void MergeFrom(const GetDriverInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetDriverInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string help = 3;
  void clear_help();
  static const int kHelpFieldNumber = 3;
  const ::std::string& help() const;
  void set_help(const ::std::string& value);
  void set_help(const char* value);
  void set_help(const char* value, size_t size);
  ::std::string* mutable_help();
  ::std::string* release_help();
  void set_allocated_help(::std::string* help);

  // repeated string commands = 4;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 4;
  const ::std::string& commands(int index) const;
  ::std::string* mutable_commands(int index);
  void set_commands(int index, const ::std::string& value);
  void set_commands(int index, const char* value);
  void set_commands(int index, const char* value, size_t size);
  ::std::string* add_commands();
  void add_commands(const ::std::string& value);
  void add_commands(const char* value);
  void add_commands(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& commands() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_commands();

  // @@protoc_insertion_point(class_scope:bess.pb.GetDriverInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr help_;
  ::google::protobuf::RepeatedPtrField< ::std::string> commands_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetDriverInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListMclassResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ListMclassResponse) */ {
 public:
  ListMclassResponse();
  virtual ~ListMclassResponse();

  ListMclassResponse(const ListMclassResponse& from);

  inline ListMclassResponse& operator=(const ListMclassResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMclassResponse& default_instance();

  void Swap(ListMclassResponse* other);

  // implements Message ----------------------------------------------

  inline ListMclassResponse* New() const { return New(NULL); }

  ListMclassResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListMclassResponse& from);
  void MergeFrom(const ListMclassResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListMclassResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // repeated string names = 2;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 2;
  const ::std::string& names(int index) const;
  ::std::string* mutable_names(int index);
  void set_names(int index, const ::std::string& value);
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  ::std::string* add_names();
  void add_names(const ::std::string& value);
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // @@protoc_insertion_point(class_scope:bess.pb.ListMclassResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ListMclassResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetMclassInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetMclassInfoRequest) */ {
 public:
  GetMclassInfoRequest();
  virtual ~GetMclassInfoRequest();

  GetMclassInfoRequest(const GetMclassInfoRequest& from);

  inline GetMclassInfoRequest& operator=(const GetMclassInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMclassInfoRequest& default_instance();

  void Swap(GetMclassInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetMclassInfoRequest* New() const { return New(NULL); }

  GetMclassInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMclassInfoRequest& from);
  void MergeFrom(const GetMclassInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMclassInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.GetMclassInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetMclassInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetMclassInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GetMclassInfoResponse) */ {
 public:
  GetMclassInfoResponse();
  virtual ~GetMclassInfoResponse();

  GetMclassInfoResponse(const GetMclassInfoResponse& from);

  inline GetMclassInfoResponse& operator=(const GetMclassInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMclassInfoResponse& default_instance();

  void Swap(GetMclassInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetMclassInfoResponse* New() const { return New(NULL); }

  GetMclassInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMclassInfoResponse& from);
  void MergeFrom(const GetMclassInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMclassInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string help = 3;
  void clear_help();
  static const int kHelpFieldNumber = 3;
  const ::std::string& help() const;
  void set_help(const ::std::string& value);
  void set_help(const char* value);
  void set_help(const char* value, size_t size);
  ::std::string* mutable_help();
  ::std::string* release_help();
  void set_allocated_help(::std::string* help);

  // repeated string cmds = 4;
  int cmds_size() const;
  void clear_cmds();
  static const int kCmdsFieldNumber = 4;
  const ::std::string& cmds(int index) const;
  ::std::string* mutable_cmds(int index);
  void set_cmds(int index, const ::std::string& value);
  void set_cmds(int index, const char* value);
  void set_cmds(int index, const char* value, size_t size);
  ::std::string* add_cmds();
  void add_cmds(const ::std::string& value);
  void add_cmds(const char* value);
  void add_cmds(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cmds() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cmds();

  // repeated string cmd_args = 5;
  int cmd_args_size() const;
  void clear_cmd_args();
  static const int kCmdArgsFieldNumber = 5;
  const ::std::string& cmd_args(int index) const;
  ::std::string* mutable_cmd_args(int index);
  void set_cmd_args(int index, const ::std::string& value);
  void set_cmd_args(int index, const char* value);
  void set_cmd_args(int index, const char* value, size_t size);
  ::std::string* add_cmd_args();
  void add_cmd_args(const ::std::string& value);
  void add_cmd_args(const char* value);
  void add_cmd_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cmd_args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cmd_args();

  // @@protoc_insertion_point(class_scope:bess.pb.GetMclassInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr help_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cmds_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cmd_args_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static GetMclassInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreateModuleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.CreateModuleRequest) */ {
 public:
  CreateModuleRequest();
  virtual ~CreateModuleRequest();

  CreateModuleRequest(const CreateModuleRequest& from);

  inline CreateModuleRequest& operator=(const CreateModuleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateModuleRequest& default_instance();

  void Swap(CreateModuleRequest* other);

  // implements Message ----------------------------------------------

  inline CreateModuleRequest* New() const { return New(NULL); }

  CreateModuleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateModuleRequest& from);
  void MergeFrom(const CreateModuleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateModuleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string mclass = 2;
  void clear_mclass();
  static const int kMclassFieldNumber = 2;
  const ::std::string& mclass() const;
  void set_mclass(const ::std::string& value);
  void set_mclass(const char* value);
  void set_mclass(const char* value, size_t size);
  ::std::string* mutable_mclass();
  ::std::string* release_mclass();
  void set_allocated_mclass(::std::string* mclass);

  // optional .google.protobuf.Any arg = 3;
  bool has_arg() const;
  void clear_arg();
  static const int kArgFieldNumber = 3;
  const ::google::protobuf::Any& arg() const;
  ::google::protobuf::Any* mutable_arg();
  ::google::protobuf::Any* release_arg();
  void set_allocated_arg(::google::protobuf::Any* arg);

  // @@protoc_insertion_point(class_scope:bess.pb.CreateModuleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mclass_;
  ::google::protobuf::Any* arg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static CreateModuleRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModuleCommandRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ModuleCommandRequest) */ {
 public:
  ModuleCommandRequest();
  virtual ~ModuleCommandRequest();

  ModuleCommandRequest(const ModuleCommandRequest& from);

  inline ModuleCommandRequest& operator=(const ModuleCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleCommandRequest& default_instance();

  void Swap(ModuleCommandRequest* other);

  // implements Message ----------------------------------------------

  inline ModuleCommandRequest* New() const { return New(NULL); }

  ModuleCommandRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModuleCommandRequest& from);
  void MergeFrom(const ModuleCommandRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModuleCommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional .google.protobuf.Any arg = 3;
  bool has_arg() const;
  void clear_arg();
  static const int kArgFieldNumber = 3;
  const ::google::protobuf::Any& arg() const;
  ::google::protobuf::Any* mutable_arg();
  ::google::protobuf::Any* release_arg();
  void set_allocated_arg(::google::protobuf::Any* arg);

  // @@protoc_insertion_point(class_scope:bess.pb.ModuleCommandRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::Any* arg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ModuleCommandRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModuleCommandResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ModuleCommandResponse) */ {
 public:
  ModuleCommandResponse();
  virtual ~ModuleCommandResponse();

  ModuleCommandResponse(const ModuleCommandResponse& from);

  inline ModuleCommandResponse& operator=(const ModuleCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleCommandResponse& default_instance();

  void Swap(ModuleCommandResponse* other);

  // implements Message ----------------------------------------------

  inline ModuleCommandResponse* New() const { return New(NULL); }

  ModuleCommandResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModuleCommandResponse& from);
  void MergeFrom(const ModuleCommandResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModuleCommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional .google.protobuf.Any other = 2;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 2;
  const ::google::protobuf::Any& other() const;
  ::google::protobuf::Any* mutable_other();
  ::google::protobuf::Any* release_other();
  void set_allocated_other(::google::protobuf::Any* other);

  // @@protoc_insertion_point(class_scope:bess.pb.ModuleCommandResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::Any* other_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static ModuleCommandResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreatePortRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.CreatePortRequest) */ {
 public:
  CreatePortRequest();
  virtual ~CreatePortRequest();

  CreatePortRequest(const CreatePortRequest& from);

  inline CreatePortRequest& operator=(const CreatePortRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePortRequest& default_instance();

  void Swap(CreatePortRequest* other);

  // implements Message ----------------------------------------------

  inline CreatePortRequest* New() const { return New(NULL); }

  CreatePortRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePortRequest& from);
  void MergeFrom(const CreatePortRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreatePortRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string driver = 2;
  void clear_driver();
  static const int kDriverFieldNumber = 2;
  const ::std::string& driver() const;
  void set_driver(const ::std::string& value);
  void set_driver(const char* value);
  void set_driver(const char* value, size_t size);
  ::std::string* mutable_driver();
  ::std::string* release_driver();
  void set_allocated_driver(::std::string* driver);

  // optional uint64 num_inc_q = 3;
  void clear_num_inc_q();
  static const int kNumIncQFieldNumber = 3;
  ::google::protobuf::uint64 num_inc_q() const;
  void set_num_inc_q(::google::protobuf::uint64 value);

  // optional uint64 num_out_q = 4;
  void clear_num_out_q();
  static const int kNumOutQFieldNumber = 4;
  ::google::protobuf::uint64 num_out_q() const;
  void set_num_out_q(::google::protobuf::uint64 value);

  // optional uint64 size_inc_q = 5;
  void clear_size_inc_q();
  static const int kSizeIncQFieldNumber = 5;
  ::google::protobuf::uint64 size_inc_q() const;
  void set_size_inc_q(::google::protobuf::uint64 value);

  // optional uint64 size_out_q = 6;
  void clear_size_out_q();
  static const int kSizeOutQFieldNumber = 6;
  ::google::protobuf::uint64 size_out_q() const;
  void set_size_out_q(::google::protobuf::uint64 value);

  // optional string mac_addr = 7;
  void clear_mac_addr();
  static const int kMacAddrFieldNumber = 7;
  const ::std::string& mac_addr() const;
  void set_mac_addr(const ::std::string& value);
  void set_mac_addr(const char* value);
  void set_mac_addr(const char* value, size_t size);
  ::std::string* mutable_mac_addr();
  ::std::string* release_mac_addr();
  void set_allocated_mac_addr(::std::string* mac_addr);

  // optional .google.protobuf.Any arg = 8;
  bool has_arg() const;
  void clear_arg();
  static const int kArgFieldNumber = 8;
  const ::google::protobuf::Any& arg() const;
  ::google::protobuf::Any* mutable_arg();
  ::google::protobuf::Any* release_arg();
  void set_allocated_arg(::google::protobuf::Any* arg);

  // @@protoc_insertion_point(class_scope:bess.pb.CreatePortRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr driver_;
  ::google::protobuf::uint64 num_inc_q_;
  ::google::protobuf::uint64 num_out_q_;
  ::google::protobuf::uint64 size_inc_q_;
  ::google::protobuf::uint64 size_out_q_;
  ::google::protobuf::internal::ArenaStringPtr mac_addr_;
  ::google::protobuf::Any* arg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static CreatePortRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreatePortResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.CreatePortResponse) */ {
 public:
  CreatePortResponse();
  virtual ~CreatePortResponse();

  CreatePortResponse(const CreatePortResponse& from);

  inline CreatePortResponse& operator=(const CreatePortResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePortResponse& default_instance();

  void Swap(CreatePortResponse* other);

  // implements Message ----------------------------------------------

  inline CreatePortResponse* New() const { return New(NULL); }

  CreatePortResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePortResponse& from);
  void MergeFrom(const CreatePortResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreatePortResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bess.pb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::bess::pb::Error& error() const;
  ::bess::pb::Error* mutable_error();
  ::bess::pb::Error* release_error();
  void set_allocated_error(::bess::pb::Error* error);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:bess.pb.CreatePortResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::bess::pb::Error* error_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static CreatePortResponse* default_instance_;
};
// -------------------------------------------------------------------

class EnableTrackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.EnableTrackRequest) */ {
 public:
  EnableTrackRequest();
  virtual ~EnableTrackRequest();

  EnableTrackRequest(const EnableTrackRequest& from);

  inline EnableTrackRequest& operator=(const EnableTrackRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableTrackRequest& default_instance();

  void Swap(EnableTrackRequest* other);

  // implements Message ----------------------------------------------

  inline EnableTrackRequest* New() const { return New(NULL); }

  EnableTrackRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableTrackRequest& from);
  void MergeFrom(const EnableTrackRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableTrackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 gate = 2;
  void clear_gate();
  static const int kGateFieldNumber = 2;
  ::google::protobuf::int64 gate() const;
  void set_gate(::google::protobuf::int64 value);

  // optional bool is_igate = 3;
  void clear_is_igate();
  static const int kIsIgateFieldNumber = 3;
  bool is_igate() const;
  void set_is_igate(bool value);

  // optional bool use_gate = 4;
  void clear_use_gate();
  static const int kUseGateFieldNumber = 4;
  bool use_gate() const;
  void set_use_gate(bool value);

  // @@protoc_insertion_point(class_scope:bess.pb.EnableTrackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 gate_;
  bool is_igate_;
  bool use_gate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static EnableTrackRequest* default_instance_;
};
// -------------------------------------------------------------------

class DisableTrackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DisableTrackRequest) */ {
 public:
  DisableTrackRequest();
  virtual ~DisableTrackRequest();

  DisableTrackRequest(const DisableTrackRequest& from);

  inline DisableTrackRequest& operator=(const DisableTrackRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisableTrackRequest& default_instance();

  void Swap(DisableTrackRequest* other);

  // implements Message ----------------------------------------------

  inline DisableTrackRequest* New() const { return New(NULL); }

  DisableTrackRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisableTrackRequest& from);
  void MergeFrom(const DisableTrackRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableTrackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 gate = 2;
  void clear_gate();
  static const int kGateFieldNumber = 2;
  ::google::protobuf::int64 gate() const;
  void set_gate(::google::protobuf::int64 value);

  // optional bool is_igate = 3;
  void clear_is_igate();
  static const int kIsIgateFieldNumber = 3;
  bool is_igate() const;
  void set_is_igate(bool value);

  // optional bool use_gate = 4;
  void clear_use_gate();
  static const int kUseGateFieldNumber = 4;
  bool use_gate() const;
  void set_use_gate(bool value);

  // @@protoc_insertion_point(class_scope:bess.pb.DisableTrackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 gate_;
  bool is_igate_;
  bool use_gate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_bess_5fmsg_2eproto();
  friend void protobuf_AssignDesc_bess_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_bess_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static DisableTrackRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyRequest

// -------------------------------------------------------------------

// EmptyArg

// -------------------------------------------------------------------

// EmptyResponse

// optional .bess.pb.Error error = 1;
inline bool EmptyResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void EmptyResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& EmptyResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.EmptyResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* EmptyResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.EmptyResponse.error)
  return error_;
}
inline ::bess::pb::Error* EmptyResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.EmptyResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void EmptyResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.EmptyResponse.error)
}

// -------------------------------------------------------------------

// DisableTcpdumpRequest

// optional string name = 1;
inline void DisableTcpdumpRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DisableTcpdumpRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTcpdumpRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableTcpdumpRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.DisableTcpdumpRequest.name)
}
inline void DisableTcpdumpRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.DisableTcpdumpRequest.name)
}
inline void DisableTcpdumpRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.DisableTcpdumpRequest.name)
}
inline ::std::string* DisableTcpdumpRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.DisableTcpdumpRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisableTcpdumpRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.DisableTcpdumpRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableTcpdumpRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.DisableTcpdumpRequest.name)
}

// optional uint64 gate = 2;
inline void DisableTcpdumpRequest::clear_gate() {
  gate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DisableTcpdumpRequest::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTcpdumpRequest.gate)
  return gate_;
}
inline void DisableTcpdumpRequest::set_gate(::google::protobuf::uint64 value) {
  
  gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisableTcpdumpRequest.gate)
}

// optional bool is_igate = 3;
inline void DisableTcpdumpRequest::clear_is_igate() {
  is_igate_ = false;
}
inline bool DisableTcpdumpRequest::is_igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTcpdumpRequest.is_igate)
  return is_igate_;
}
inline void DisableTcpdumpRequest::set_is_igate(bool value) {
  
  is_igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisableTcpdumpRequest.is_igate)
}

// -------------------------------------------------------------------

// EnableTcpdumpRequest

// optional string name = 1;
inline void EnableTcpdumpRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnableTcpdumpRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTcpdumpRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTcpdumpRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.EnableTcpdumpRequest.name)
}
inline void EnableTcpdumpRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.EnableTcpdumpRequest.name)
}
inline void EnableTcpdumpRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.EnableTcpdumpRequest.name)
}
inline ::std::string* EnableTcpdumpRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.EnableTcpdumpRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnableTcpdumpRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.EnableTcpdumpRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTcpdumpRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.EnableTcpdumpRequest.name)
}

// optional uint64 gate = 2;
inline void EnableTcpdumpRequest::clear_gate() {
  gate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EnableTcpdumpRequest::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTcpdumpRequest.gate)
  return gate_;
}
inline void EnableTcpdumpRequest::set_gate(::google::protobuf::uint64 value) {
  
  gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.EnableTcpdumpRequest.gate)
}

// optional string fifo = 3;
inline void EnableTcpdumpRequest::clear_fifo() {
  fifo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnableTcpdumpRequest::fifo() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTcpdumpRequest.fifo)
  return fifo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTcpdumpRequest::set_fifo(const ::std::string& value) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.EnableTcpdumpRequest.fifo)
}
inline void EnableTcpdumpRequest::set_fifo(const char* value) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.EnableTcpdumpRequest.fifo)
}
inline void EnableTcpdumpRequest::set_fifo(const char* value, size_t size) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.EnableTcpdumpRequest.fifo)
}
inline ::std::string* EnableTcpdumpRequest::mutable_fifo() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.EnableTcpdumpRequest.fifo)
  return fifo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnableTcpdumpRequest::release_fifo() {
  // @@protoc_insertion_point(field_release:bess.pb.EnableTcpdumpRequest.fifo)
  
  return fifo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTcpdumpRequest::set_allocated_fifo(::std::string* fifo) {
  if (fifo != NULL) {
    
  } else {
    
  }
  fifo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fifo);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.EnableTcpdumpRequest.fifo)
}

// optional bool is_igate = 4;
inline void EnableTcpdumpRequest::clear_is_igate() {
  is_igate_ = false;
}
inline bool EnableTcpdumpRequest::is_igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTcpdumpRequest.is_igate)
  return is_igate_;
}
inline void EnableTcpdumpRequest::set_is_igate(bool value) {
  
  is_igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.EnableTcpdumpRequest.is_igate)
}

// -------------------------------------------------------------------

// AttachTaskRequest

// optional string name = 1;
inline void AttachTaskRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttachTaskRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.AttachTaskRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttachTaskRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.AttachTaskRequest.name)
}
inline void AttachTaskRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.AttachTaskRequest.name)
}
inline void AttachTaskRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.AttachTaskRequest.name)
}
inline ::std::string* AttachTaskRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.AttachTaskRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttachTaskRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.AttachTaskRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttachTaskRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.AttachTaskRequest.name)
}

// optional uint64 taskid = 2;
inline void AttachTaskRequest::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AttachTaskRequest::taskid() const {
  // @@protoc_insertion_point(field_get:bess.pb.AttachTaskRequest.taskid)
  return taskid_;
}
inline void AttachTaskRequest::set_taskid(::google::protobuf::uint64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.AttachTaskRequest.taskid)
}

// optional string tc = 3;
inline bool AttachTaskRequest::has_tc() const {
  return identifier_case() == kTc;
}
inline void AttachTaskRequest::set_has_tc() {
  _oneof_case_[0] = kTc;
}
inline void AttachTaskRequest::clear_tc() {
  if (has_tc()) {
    identifier_.tc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_identifier();
  }
}
inline const ::std::string& AttachTaskRequest::tc() const {
  // @@protoc_insertion_point(field_get:bess.pb.AttachTaskRequest.tc)
  if (has_tc()) {
    return identifier_.tc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AttachTaskRequest::set_tc(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.AttachTaskRequest.tc)
  if (!has_tc()) {
    clear_identifier();
    set_has_tc();
    identifier_.tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.AttachTaskRequest.tc)
}
inline void AttachTaskRequest::set_tc(const char* value) {
  if (!has_tc()) {
    clear_identifier();
    set_has_tc();
    identifier_.tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.AttachTaskRequest.tc)
}
inline void AttachTaskRequest::set_tc(const char* value, size_t size) {
  if (!has_tc()) {
    clear_identifier();
    set_has_tc();
    identifier_.tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.AttachTaskRequest.tc)
}
inline ::std::string* AttachTaskRequest::mutable_tc() {
  if (!has_tc()) {
    clear_identifier();
    set_has_tc();
    identifier_.tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.AttachTaskRequest.tc)
  return identifier_.tc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttachTaskRequest::release_tc() {
  // @@protoc_insertion_point(field_release:bess.pb.AttachTaskRequest.tc)
  if (has_tc()) {
    clear_has_identifier();
    return identifier_.tc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AttachTaskRequest::set_allocated_tc(::std::string* tc) {
  if (!has_tc()) {
    identifier_.tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_identifier();
  if (tc != NULL) {
    set_has_tc();
    identifier_.tc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tc);
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.AttachTaskRequest.tc)
}

// optional uint64 wid = 4;
inline bool AttachTaskRequest::has_wid() const {
  return identifier_case() == kWid;
}
inline void AttachTaskRequest::set_has_wid() {
  _oneof_case_[0] = kWid;
}
inline void AttachTaskRequest::clear_wid() {
  if (has_wid()) {
    identifier_.wid_ = GOOGLE_ULONGLONG(0);
    clear_has_identifier();
  }
}
inline ::google::protobuf::uint64 AttachTaskRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.pb.AttachTaskRequest.wid)
  if (has_wid()) {
    return identifier_.wid_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void AttachTaskRequest::set_wid(::google::protobuf::uint64 value) {
  if (!has_wid()) {
    clear_identifier();
    set_has_wid();
  }
  identifier_.wid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.AttachTaskRequest.wid)
}

inline bool AttachTaskRequest::has_identifier() const {
  return identifier_case() != IDENTIFIER_NOT_SET;
}
inline void AttachTaskRequest::clear_has_identifier() {
  _oneof_case_[0] = IDENTIFIER_NOT_SET;
}
inline AttachTaskRequest::IdentifierCase AttachTaskRequest::identifier_case() const {
  return AttachTaskRequest::IdentifierCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DisconnectModulesRequest

// optional string name = 1;
inline void DisconnectModulesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DisconnectModulesRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisconnectModulesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisconnectModulesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.DisconnectModulesRequest.name)
}
inline void DisconnectModulesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.DisconnectModulesRequest.name)
}
inline void DisconnectModulesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.DisconnectModulesRequest.name)
}
inline ::std::string* DisconnectModulesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.DisconnectModulesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisconnectModulesRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.DisconnectModulesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisconnectModulesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.DisconnectModulesRequest.name)
}

// optional uint64 ogate = 2;
inline void DisconnectModulesRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DisconnectModulesRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisconnectModulesRequest.ogate)
  return ogate_;
}
inline void DisconnectModulesRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisconnectModulesRequest.ogate)
}

// -------------------------------------------------------------------

// ConnectModulesRequest

// optional string m1 = 1;
inline void ConnectModulesRequest::clear_m1() {
  m1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectModulesRequest::m1() const {
  // @@protoc_insertion_point(field_get:bess.pb.ConnectModulesRequest.m1)
  return m1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectModulesRequest::set_m1(const ::std::string& value) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ConnectModulesRequest.m1)
}
inline void ConnectModulesRequest::set_m1(const char* value) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ConnectModulesRequest.m1)
}
inline void ConnectModulesRequest::set_m1(const char* value, size_t size) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ConnectModulesRequest.m1)
}
inline ::std::string* ConnectModulesRequest::mutable_m1() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ConnectModulesRequest.m1)
  return m1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectModulesRequest::release_m1() {
  // @@protoc_insertion_point(field_release:bess.pb.ConnectModulesRequest.m1)
  
  return m1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectModulesRequest::set_allocated_m1(::std::string* m1) {
  if (m1 != NULL) {
    
  } else {
    
  }
  m1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m1);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ConnectModulesRequest.m1)
}

// optional string m2 = 2;
inline void ConnectModulesRequest::clear_m2() {
  m2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectModulesRequest::m2() const {
  // @@protoc_insertion_point(field_get:bess.pb.ConnectModulesRequest.m2)
  return m2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectModulesRequest::set_m2(const ::std::string& value) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ConnectModulesRequest.m2)
}
inline void ConnectModulesRequest::set_m2(const char* value) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ConnectModulesRequest.m2)
}
inline void ConnectModulesRequest::set_m2(const char* value, size_t size) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ConnectModulesRequest.m2)
}
inline ::std::string* ConnectModulesRequest::mutable_m2() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ConnectModulesRequest.m2)
  return m2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectModulesRequest::release_m2() {
  // @@protoc_insertion_point(field_release:bess.pb.ConnectModulesRequest.m2)
  
  return m2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectModulesRequest::set_allocated_m2(::std::string* m2) {
  if (m2 != NULL) {
    
  } else {
    
  }
  m2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m2);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ConnectModulesRequest.m2)
}

// optional uint64 ogate = 3;
inline void ConnectModulesRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConnectModulesRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.pb.ConnectModulesRequest.ogate)
  return ogate_;
}
inline void ConnectModulesRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ConnectModulesRequest.ogate)
}

// optional uint64 igate = 4;
inline void ConnectModulesRequest::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConnectModulesRequest::igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.ConnectModulesRequest.igate)
  return igate_;
}
inline void ConnectModulesRequest::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ConnectModulesRequest.igate)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_IGate_OGate

// optional uint64 ogate = 1;
inline void GetModuleInfoResponse_IGate_OGate::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_IGate_OGate::ogate() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.OGate.ogate)
  return ogate_;
}
inline void GetModuleInfoResponse_IGate_OGate::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.OGate.ogate)
}

// optional string name = 2;
inline void GetModuleInfoResponse_IGate_OGate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse_IGate_OGate::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_IGate_OGate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
}
inline void GetModuleInfoResponse_IGate_OGate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
}
inline void GetModuleInfoResponse_IGate_OGate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
}
inline ::std::string* GetModuleInfoResponse_IGate_OGate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse_IGate_OGate::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_IGate_OGate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.IGate.OGate.name)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_IGate

// optional uint64 igate = 1;
inline void GetModuleInfoResponse_IGate::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_IGate::igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.igate)
  return igate_;
}
inline void GetModuleInfoResponse_IGate::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.igate)
}

// repeated .bess.pb.GetModuleInfoResponse.IGate.OGate ogates = 2;
inline int GetModuleInfoResponse_IGate::ogates_size() const {
  return ogates_.size();
}
inline void GetModuleInfoResponse_IGate::clear_ogates() {
  ogates_.Clear();
}
inline const ::bess::pb::GetModuleInfoResponse_IGate_OGate& GetModuleInfoResponse_IGate::ogates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Get(index);
}
inline ::bess::pb::GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate::mutable_ogates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Mutable(index);
}
inline ::bess::pb::GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate::add_ogates() {
  // @@protoc_insertion_point(field_add:bess.pb.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate_OGate >*
GetModuleInfoResponse_IGate::mutable_ogates() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetModuleInfoResponse.IGate.ogates)
  return &ogates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate_OGate >&
GetModuleInfoResponse_IGate::ogates() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetModuleInfoResponse.IGate.ogates)
  return ogates_;
}

// optional uint64 cnt = 3;
inline void GetModuleInfoResponse_IGate::clear_cnt() {
  cnt_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_IGate::cnt() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.cnt)
  return cnt_;
}
inline void GetModuleInfoResponse_IGate::set_cnt(::google::protobuf::uint64 value) {
  
  cnt_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.cnt)
}

// optional uint64 pkts = 4;
inline void GetModuleInfoResponse_IGate::clear_pkts() {
  pkts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_IGate::pkts() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.pkts)
  return pkts_;
}
inline void GetModuleInfoResponse_IGate::set_pkts(::google::protobuf::uint64 value) {
  
  pkts_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.pkts)
}

// optional double timestamp = 5;
inline void GetModuleInfoResponse_IGate::clear_timestamp() {
  timestamp_ = 0;
}
inline double GetModuleInfoResponse_IGate::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.IGate.timestamp)
  return timestamp_;
}
inline void GetModuleInfoResponse_IGate::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.IGate.timestamp)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_OGate

// optional uint64 ogate = 1;
inline void GetModuleInfoResponse_OGate::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_OGate::ogate() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.ogate)
  return ogate_;
}
inline void GetModuleInfoResponse_OGate::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.ogate)
}

// optional uint64 cnt = 2;
inline void GetModuleInfoResponse_OGate::clear_cnt() {
  cnt_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_OGate::cnt() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.cnt)
  return cnt_;
}
inline void GetModuleInfoResponse_OGate::set_cnt(::google::protobuf::uint64 value) {
  
  cnt_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.cnt)
}

// optional uint64 pkts = 3;
inline void GetModuleInfoResponse_OGate::clear_pkts() {
  pkts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_OGate::pkts() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.pkts)
  return pkts_;
}
inline void GetModuleInfoResponse_OGate::set_pkts(::google::protobuf::uint64 value) {
  
  pkts_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.pkts)
}

// optional double timestamp = 4;
inline void GetModuleInfoResponse_OGate::clear_timestamp() {
  timestamp_ = 0;
}
inline double GetModuleInfoResponse_OGate::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.timestamp)
  return timestamp_;
}
inline void GetModuleInfoResponse_OGate::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.timestamp)
}

// optional string name = 5;
inline void GetModuleInfoResponse_OGate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse_OGate::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_OGate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.name)
}
inline void GetModuleInfoResponse_OGate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.OGate.name)
}
inline void GetModuleInfoResponse_OGate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.OGate.name)
}
inline ::std::string* GetModuleInfoResponse_OGate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.OGate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse_OGate::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.OGate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_OGate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.OGate.name)
}

// optional uint64 igate = 6;
inline void GetModuleInfoResponse_OGate::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_OGate::igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.OGate.igate)
  return igate_;
}
inline void GetModuleInfoResponse_OGate::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.OGate.igate)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_Attribute

// optional string name = 1;
inline void GetModuleInfoResponse_Attribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse_Attribute::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.Attribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_Attribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.Attribute.name)
}
inline void GetModuleInfoResponse_Attribute::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.Attribute.name)
}
inline void GetModuleInfoResponse_Attribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.Attribute.name)
}
inline ::std::string* GetModuleInfoResponse_Attribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.Attribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse_Attribute::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.Attribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_Attribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.Attribute.name)
}

// optional uint64 size = 2;
inline void GetModuleInfoResponse_Attribute::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetModuleInfoResponse_Attribute::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.Attribute.size)
  return size_;
}
inline void GetModuleInfoResponse_Attribute::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.Attribute.size)
}

// optional string mode = 3;
inline void GetModuleInfoResponse_Attribute::clear_mode() {
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse_Attribute::mode() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.Attribute.mode)
  return mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_Attribute::set_mode(const ::std::string& value) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.Attribute.mode)
}
inline void GetModuleInfoResponse_Attribute::set_mode(const char* value) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.Attribute.mode)
}
inline void GetModuleInfoResponse_Attribute::set_mode(const char* value, size_t size) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.Attribute.mode)
}
inline ::std::string* GetModuleInfoResponse_Attribute::mutable_mode() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.Attribute.mode)
  return mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse_Attribute::release_mode() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.Attribute.mode)
  
  return mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse_Attribute::set_allocated_mode(::std::string* mode) {
  if (mode != NULL) {
    
  } else {
    
  }
  mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mode);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.Attribute.mode)
}

// optional int64 offset = 4;
inline void GetModuleInfoResponse_Attribute::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetModuleInfoResponse_Attribute::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.Attribute.offset)
  return offset_;
}
inline void GetModuleInfoResponse_Attribute::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.Attribute.offset)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse

// optional .bess.pb.Error error = 1;
inline bool GetModuleInfoResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetModuleInfoResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& GetModuleInfoResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* GetModuleInfoResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.error)
  return error_;
}
inline ::bess::pb::Error* GetModuleInfoResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetModuleInfoResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.error)
}

// optional string name = 2;
inline void GetModuleInfoResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.name)
}
inline void GetModuleInfoResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.name)
}
inline void GetModuleInfoResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.name)
}
inline ::std::string* GetModuleInfoResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.name)
}

// optional string mclass = 3;
inline void GetModuleInfoResponse::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse::mclass() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.mclass)
}
inline void GetModuleInfoResponse::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.mclass)
}
inline void GetModuleInfoResponse::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.mclass)
}
inline ::std::string* GetModuleInfoResponse::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.mclass)
}

// optional string desc = 4;
inline void GetModuleInfoResponse::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoResponse::desc() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoResponse.desc)
}
inline void GetModuleInfoResponse::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoResponse.desc)
}
inline void GetModuleInfoResponse::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoResponse.desc)
}
inline ::std::string* GetModuleInfoResponse::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoResponse::release_desc() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoResponse.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoResponse::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoResponse.desc)
}

// repeated .bess.pb.GetModuleInfoResponse.IGate igates = 6;
inline int GetModuleInfoResponse::igates_size() const {
  return igates_.size();
}
inline void GetModuleInfoResponse::clear_igates() {
  igates_.Clear();
}
inline const ::bess::pb::GetModuleInfoResponse_IGate& GetModuleInfoResponse::igates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.igates)
  return igates_.Get(index);
}
inline ::bess::pb::GetModuleInfoResponse_IGate* GetModuleInfoResponse::mutable_igates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.igates)
  return igates_.Mutable(index);
}
inline ::bess::pb::GetModuleInfoResponse_IGate* GetModuleInfoResponse::add_igates() {
  // @@protoc_insertion_point(field_add:bess.pb.GetModuleInfoResponse.igates)
  return igates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate >*
GetModuleInfoResponse::mutable_igates() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetModuleInfoResponse.igates)
  return &igates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_IGate >&
GetModuleInfoResponse::igates() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetModuleInfoResponse.igates)
  return igates_;
}

// repeated .bess.pb.GetModuleInfoResponse.OGate ogates = 7;
inline int GetModuleInfoResponse::ogates_size() const {
  return ogates_.size();
}
inline void GetModuleInfoResponse::clear_ogates() {
  ogates_.Clear();
}
inline const ::bess::pb::GetModuleInfoResponse_OGate& GetModuleInfoResponse::ogates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.ogates)
  return ogates_.Get(index);
}
inline ::bess::pb::GetModuleInfoResponse_OGate* GetModuleInfoResponse::mutable_ogates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.ogates)
  return ogates_.Mutable(index);
}
inline ::bess::pb::GetModuleInfoResponse_OGate* GetModuleInfoResponse::add_ogates() {
  // @@protoc_insertion_point(field_add:bess.pb.GetModuleInfoResponse.ogates)
  return ogates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_OGate >*
GetModuleInfoResponse::mutable_ogates() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetModuleInfoResponse.ogates)
  return &ogates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_OGate >&
GetModuleInfoResponse::ogates() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetModuleInfoResponse.ogates)
  return ogates_;
}

// repeated .bess.pb.GetModuleInfoResponse.Attribute metadata = 8;
inline int GetModuleInfoResponse::metadata_size() const {
  return metadata_.size();
}
inline void GetModuleInfoResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::bess::pb::GetModuleInfoResponse_Attribute& GetModuleInfoResponse::metadata(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoResponse.metadata)
  return metadata_.Get(index);
}
inline ::bess::pb::GetModuleInfoResponse_Attribute* GetModuleInfoResponse::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoResponse.metadata)
  return metadata_.Mutable(index);
}
inline ::bess::pb::GetModuleInfoResponse_Attribute* GetModuleInfoResponse::add_metadata() {
  // @@protoc_insertion_point(field_add:bess.pb.GetModuleInfoResponse.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_Attribute >*
GetModuleInfoResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetModuleInfoResponse.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::GetModuleInfoResponse_Attribute >&
GetModuleInfoResponse::metadata() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetModuleInfoResponse.metadata)
  return metadata_;
}

// -------------------------------------------------------------------

// GetModuleInfoRequest

// optional string name = 1;
inline void GetModuleInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetModuleInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetModuleInfoRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetModuleInfoRequest.name)
}
inline void GetModuleInfoRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetModuleInfoRequest.name)
}
inline void GetModuleInfoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetModuleInfoRequest.name)
}
inline ::std::string* GetModuleInfoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetModuleInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetModuleInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetModuleInfoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetModuleInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetModuleInfoRequest.name)
}

// -------------------------------------------------------------------

// DestroyModuleRequest

// optional string name = 1;
inline void DestroyModuleRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyModuleRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.DestroyModuleRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyModuleRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.DestroyModuleRequest.name)
}
inline void DestroyModuleRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.DestroyModuleRequest.name)
}
inline void DestroyModuleRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.DestroyModuleRequest.name)
}
inline ::std::string* DestroyModuleRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.DestroyModuleRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyModuleRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.DestroyModuleRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyModuleRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.DestroyModuleRequest.name)
}

// -------------------------------------------------------------------

// CreateModuleResponse

// optional .bess.pb.Error error = 1;
inline bool CreateModuleResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void CreateModuleResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& CreateModuleResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreateModuleResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* CreateModuleResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.CreateModuleResponse.error)
  return error_;
}
inline ::bess::pb::Error* CreateModuleResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.CreateModuleResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CreateModuleResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreateModuleResponse.error)
}

// optional string name = 2;
inline void CreateModuleResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateModuleResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreateModuleResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreateModuleResponse.name)
}
inline void CreateModuleResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreateModuleResponse.name)
}
inline void CreateModuleResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreateModuleResponse.name)
}
inline ::std::string* CreateModuleResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreateModuleResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateModuleResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.CreateModuleResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreateModuleResponse.name)
}

// -------------------------------------------------------------------

// ListModulesResponse_Module

// optional string name = 1;
inline void ListModulesResponse_Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModulesResponse_Module::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListModulesResponse.Module.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ListModulesResponse.Module.name)
}
inline void ListModulesResponse_Module::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ListModulesResponse.Module.name)
}
inline void ListModulesResponse_Module::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListModulesResponse.Module.name)
}
inline ::std::string* ListModulesResponse_Module::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ListModulesResponse.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModulesResponse_Module::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.ListModulesResponse.Module.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListModulesResponse.Module.name)
}

// optional string mclass = 2;
inline void ListModulesResponse_Module::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModulesResponse_Module::mclass() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListModulesResponse.Module.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ListModulesResponse.Module.mclass)
}
inline void ListModulesResponse_Module::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ListModulesResponse.Module.mclass)
}
inline void ListModulesResponse_Module::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListModulesResponse.Module.mclass)
}
inline ::std::string* ListModulesResponse_Module::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ListModulesResponse.Module.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModulesResponse_Module::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.pb.ListModulesResponse.Module.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListModulesResponse.Module.mclass)
}

// optional string desc = 3;
inline void ListModulesResponse_Module::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListModulesResponse_Module::desc() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListModulesResponse.Module.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ListModulesResponse.Module.desc)
}
inline void ListModulesResponse_Module::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ListModulesResponse.Module.desc)
}
inline void ListModulesResponse_Module::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListModulesResponse.Module.desc)
}
inline ::std::string* ListModulesResponse_Module::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ListModulesResponse.Module.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListModulesResponse_Module::release_desc() {
  // @@protoc_insertion_point(field_release:bess.pb.ListModulesResponse.Module.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListModulesResponse_Module::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListModulesResponse.Module.desc)
}

// -------------------------------------------------------------------

// ListModulesResponse

// optional .bess.pb.Error error = 1;
inline bool ListModulesResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListModulesResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListModulesResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListModulesResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListModulesResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListModulesResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListModulesResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListModulesResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListModulesResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListModulesResponse.error)
}

// repeated .bess.pb.ListModulesResponse.Module modules = 2;
inline int ListModulesResponse::modules_size() const {
  return modules_.size();
}
inline void ListModulesResponse::clear_modules() {
  modules_.Clear();
}
inline const ::bess::pb::ListModulesResponse_Module& ListModulesResponse::modules(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListModulesResponse.modules)
  return modules_.Get(index);
}
inline ::bess::pb::ListModulesResponse_Module* ListModulesResponse::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListModulesResponse.modules)
  return modules_.Mutable(index);
}
inline ::bess::pb::ListModulesResponse_Module* ListModulesResponse::add_modules() {
  // @@protoc_insertion_point(field_add:bess.pb.ListModulesResponse.modules)
  return modules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::ListModulesResponse_Module >*
ListModulesResponse::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListModulesResponse.modules)
  return &modules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListModulesResponse_Module >&
ListModulesResponse::modules() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListModulesResponse.modules)
  return modules_;
}

// -------------------------------------------------------------------

// GetPortStatsResponse_Stat

// optional uint64 packets = 1;
inline void GetPortStatsResponse_Stat::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetPortStatsResponse_Stat::packets() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.Stat.packets)
  return packets_;
}
inline void GetPortStatsResponse_Stat::set_packets(::google::protobuf::uint64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetPortStatsResponse.Stat.packets)
}

// optional uint64 dropped = 2;
inline void GetPortStatsResponse_Stat::clear_dropped() {
  dropped_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetPortStatsResponse_Stat::dropped() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.Stat.dropped)
  return dropped_;
}
inline void GetPortStatsResponse_Stat::set_dropped(::google::protobuf::uint64 value) {
  
  dropped_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetPortStatsResponse.Stat.dropped)
}

// optional uint64 bytes = 3;
inline void GetPortStatsResponse_Stat::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetPortStatsResponse_Stat::bytes() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.Stat.bytes)
  return bytes_;
}
inline void GetPortStatsResponse_Stat::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetPortStatsResponse.Stat.bytes)
}

// -------------------------------------------------------------------

// GetPortStatsResponse

// optional .bess.pb.Error error = 1;
inline bool GetPortStatsResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetPortStatsResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& GetPortStatsResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* GetPortStatsResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetPortStatsResponse.error)
  return error_;
}
inline ::bess::pb::Error* GetPortStatsResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.GetPortStatsResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetPortStatsResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetPortStatsResponse.error)
}

// optional .bess.pb.GetPortStatsResponse.Stat inc = 2;
inline bool GetPortStatsResponse::has_inc() const {
  return !_is_default_instance_ && inc_ != NULL;
}
inline void GetPortStatsResponse::clear_inc() {
  if (GetArenaNoVirtual() == NULL && inc_ != NULL) delete inc_;
  inc_ = NULL;
}
inline const ::bess::pb::GetPortStatsResponse_Stat& GetPortStatsResponse::inc() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.inc)
  return inc_ != NULL ? *inc_ : *default_instance_->inc_;
}
inline ::bess::pb::GetPortStatsResponse_Stat* GetPortStatsResponse::mutable_inc() {
  
  if (inc_ == NULL) {
    inc_ = new ::bess::pb::GetPortStatsResponse_Stat;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetPortStatsResponse.inc)
  return inc_;
}
inline ::bess::pb::GetPortStatsResponse_Stat* GetPortStatsResponse::release_inc() {
  // @@protoc_insertion_point(field_release:bess.pb.GetPortStatsResponse.inc)
  
  ::bess::pb::GetPortStatsResponse_Stat* temp = inc_;
  inc_ = NULL;
  return temp;
}
inline void GetPortStatsResponse::set_allocated_inc(::bess::pb::GetPortStatsResponse_Stat* inc) {
  delete inc_;
  inc_ = inc;
  if (inc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetPortStatsResponse.inc)
}

// optional .bess.pb.GetPortStatsResponse.Stat out = 3;
inline bool GetPortStatsResponse::has_out() const {
  return !_is_default_instance_ && out_ != NULL;
}
inline void GetPortStatsResponse::clear_out() {
  if (GetArenaNoVirtual() == NULL && out_ != NULL) delete out_;
  out_ = NULL;
}
inline const ::bess::pb::GetPortStatsResponse_Stat& GetPortStatsResponse::out() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.out)
  return out_ != NULL ? *out_ : *default_instance_->out_;
}
inline ::bess::pb::GetPortStatsResponse_Stat* GetPortStatsResponse::mutable_out() {
  
  if (out_ == NULL) {
    out_ = new ::bess::pb::GetPortStatsResponse_Stat;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetPortStatsResponse.out)
  return out_;
}
inline ::bess::pb::GetPortStatsResponse_Stat* GetPortStatsResponse::release_out() {
  // @@protoc_insertion_point(field_release:bess.pb.GetPortStatsResponse.out)
  
  ::bess::pb::GetPortStatsResponse_Stat* temp = out_;
  out_ = NULL;
  return temp;
}
inline void GetPortStatsResponse::set_allocated_out(::bess::pb::GetPortStatsResponse_Stat* out) {
  delete out_;
  out_ = out;
  if (out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetPortStatsResponse.out)
}

// optional double timestamp = 4;
inline void GetPortStatsResponse::clear_timestamp() {
  timestamp_ = 0;
}
inline double GetPortStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsResponse.timestamp)
  return timestamp_;
}
inline void GetPortStatsResponse::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetPortStatsResponse.timestamp)
}

// -------------------------------------------------------------------

// GetPortStatsRequest

// optional string name = 1;
inline void GetPortStatsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPortStatsRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetPortStatsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPortStatsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetPortStatsRequest.name)
}
inline void GetPortStatsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetPortStatsRequest.name)
}
inline void GetPortStatsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetPortStatsRequest.name)
}
inline ::std::string* GetPortStatsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetPortStatsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPortStatsRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetPortStatsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPortStatsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetPortStatsRequest.name)
}

// -------------------------------------------------------------------

// DestroyPortRequest

// optional string name = 1;
inline void DestroyPortRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyPortRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.DestroyPortRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyPortRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.DestroyPortRequest.name)
}
inline void DestroyPortRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.DestroyPortRequest.name)
}
inline void DestroyPortRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.DestroyPortRequest.name)
}
inline ::std::string* DestroyPortRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.DestroyPortRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyPortRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.DestroyPortRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyPortRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.DestroyPortRequest.name)
}

// -------------------------------------------------------------------

// Port

// optional string name = 1;
inline void Port::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Port::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.Port.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Port::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.Port.name)
}
inline void Port::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.Port.name)
}
inline void Port::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.Port.name)
}
inline ::std::string* Port::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.Port.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Port::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.Port.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Port::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.Port.name)
}

// optional string driver = 2;
inline void Port::clear_driver() {
  driver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Port::driver() const {
  // @@protoc_insertion_point(field_get:bess.pb.Port.driver)
  return driver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Port::set_driver(const ::std::string& value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.Port.driver)
}
inline void Port::set_driver(const char* value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.Port.driver)
}
inline void Port::set_driver(const char* value, size_t size) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.Port.driver)
}
inline ::std::string* Port::mutable_driver() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.Port.driver)
  return driver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Port::release_driver() {
  // @@protoc_insertion_point(field_release:bess.pb.Port.driver)
  
  return driver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Port::set_allocated_driver(::std::string* driver) {
  if (driver != NULL) {
    
  } else {
    
  }
  driver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.Port.driver)
}

// -------------------------------------------------------------------

// ListPortsResponse

// optional .bess.pb.Error error = 1;
inline bool ListPortsResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListPortsResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListPortsResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListPortsResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListPortsResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListPortsResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListPortsResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListPortsResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListPortsResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListPortsResponse.error)
}

// repeated .bess.pb.Port ports = 2;
inline int ListPortsResponse::ports_size() const {
  return ports_.size();
}
inline void ListPortsResponse::clear_ports() {
  ports_.Clear();
}
inline const ::bess::pb::Port& ListPortsResponse::ports(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListPortsResponse.ports)
  return ports_.Get(index);
}
inline ::bess::pb::Port* ListPortsResponse::mutable_ports(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListPortsResponse.ports)
  return ports_.Mutable(index);
}
inline ::bess::pb::Port* ListPortsResponse::add_ports() {
  // @@protoc_insertion_point(field_add:bess.pb.ListPortsResponse.ports)
  return ports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::Port >*
ListPortsResponse::mutable_ports() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListPortsResponse.ports)
  return &ports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::Port >&
ListPortsResponse::ports() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListPortsResponse.ports)
  return ports_;
}

// -------------------------------------------------------------------

// ListWorkersResponse_WorkerStatus

// optional int64 wid = 1;
inline void ListWorkersResponse_WorkerStatus::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::wid() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.WorkerStatus.wid)
  return wid_;
}
inline void ListWorkersResponse_WorkerStatus::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListWorkersResponse.WorkerStatus.wid)
}

// optional int64 core = 2;
inline void ListWorkersResponse_WorkerStatus::clear_core() {
  core_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::core() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.WorkerStatus.core)
  return core_;
}
inline void ListWorkersResponse_WorkerStatus::set_core(::google::protobuf::int64 value) {
  
  core_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListWorkersResponse.WorkerStatus.core)
}

// optional int64 running = 3;
inline void ListWorkersResponse_WorkerStatus::clear_running() {
  running_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::running() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.WorkerStatus.running)
  return running_;
}
inline void ListWorkersResponse_WorkerStatus::set_running(::google::protobuf::int64 value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListWorkersResponse.WorkerStatus.running)
}

// optional int64 num_tcs = 4;
inline void ListWorkersResponse_WorkerStatus::clear_num_tcs() {
  num_tcs_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::num_tcs() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.WorkerStatus.num_tcs)
  return num_tcs_;
}
inline void ListWorkersResponse_WorkerStatus::set_num_tcs(::google::protobuf::int64 value) {
  
  num_tcs_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListWorkersResponse.WorkerStatus.num_tcs)
}

// optional int64 silent_drops = 5;
inline void ListWorkersResponse_WorkerStatus::clear_silent_drops() {
  silent_drops_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::silent_drops() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.WorkerStatus.silent_drops)
  return silent_drops_;
}
inline void ListWorkersResponse_WorkerStatus::set_silent_drops(::google::protobuf::int64 value) {
  
  silent_drops_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListWorkersResponse.WorkerStatus.silent_drops)
}

// -------------------------------------------------------------------

// ListWorkersResponse

// optional .bess.pb.Error error = 1;
inline bool ListWorkersResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListWorkersResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListWorkersResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListWorkersResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListWorkersResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListWorkersResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListWorkersResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListWorkersResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListWorkersResponse.error)
}

// repeated .bess.pb.ListWorkersResponse.WorkerStatus workers_status = 2;
inline int ListWorkersResponse::workers_status_size() const {
  return workers_status_.size();
}
inline void ListWorkersResponse::clear_workers_status() {
  workers_status_.Clear();
}
inline const ::bess::pb::ListWorkersResponse_WorkerStatus& ListWorkersResponse::workers_status(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListWorkersResponse.workers_status)
  return workers_status_.Get(index);
}
inline ::bess::pb::ListWorkersResponse_WorkerStatus* ListWorkersResponse::mutable_workers_status(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListWorkersResponse.workers_status)
  return workers_status_.Mutable(index);
}
inline ::bess::pb::ListWorkersResponse_WorkerStatus* ListWorkersResponse::add_workers_status() {
  // @@protoc_insertion_point(field_add:bess.pb.ListWorkersResponse.workers_status)
  return workers_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::ListWorkersResponse_WorkerStatus >*
ListWorkersResponse::mutable_workers_status() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListWorkersResponse.workers_status)
  return &workers_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListWorkersResponse_WorkerStatus >&
ListWorkersResponse::workers_status() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListWorkersResponse.workers_status)
  return workers_status_;
}

// -------------------------------------------------------------------

// AddWorkerRequest

// optional int64 wid = 1;
inline void AddWorkerRequest::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddWorkerRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.pb.AddWorkerRequest.wid)
  return wid_;
}
inline void AddWorkerRequest::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.AddWorkerRequest.wid)
}

// optional int64 core = 2;
inline void AddWorkerRequest::clear_core() {
  core_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddWorkerRequest::core() const {
  // @@protoc_insertion_point(field_get:bess.pb.AddWorkerRequest.core)
  return core_;
}
inline void AddWorkerRequest::set_core(::google::protobuf::int64 value) {
  
  core_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.AddWorkerRequest.core)
}

// -------------------------------------------------------------------

// ListTcsRequest

// optional int64 wid = 1;
inline void ListTcsRequest::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListTcsRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsRequest.wid)
  return wid_;
}
inline void ListTcsRequest::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListTcsRequest.wid)
}

// -------------------------------------------------------------------

// TrafficClass_Resource

// optional int64 schedules = 1;
inline void TrafficClass_Resource::clear_schedules() {
  schedules_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass_Resource::schedules() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.Resource.schedules)
  return schedules_;
}
inline void TrafficClass_Resource::set_schedules(::google::protobuf::int64 value) {
  
  schedules_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.Resource.schedules)
}

// optional int64 cycles = 2;
inline void TrafficClass_Resource::clear_cycles() {
  cycles_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass_Resource::cycles() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.Resource.cycles)
  return cycles_;
}
inline void TrafficClass_Resource::set_cycles(::google::protobuf::int64 value) {
  
  cycles_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.Resource.cycles)
}

// optional int64 packets = 3;
inline void TrafficClass_Resource::clear_packets() {
  packets_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass_Resource::packets() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.Resource.packets)
  return packets_;
}
inline void TrafficClass_Resource::set_packets(::google::protobuf::int64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.Resource.packets)
}

// optional int64 bits = 4;
inline void TrafficClass_Resource::clear_bits() {
  bits_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass_Resource::bits() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.Resource.bits)
  return bits_;
}
inline void TrafficClass_Resource::set_bits(::google::protobuf::int64 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.Resource.bits)
}

// -------------------------------------------------------------------

// TrafficClass

// optional string name = 1;
inline void TrafficClass::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrafficClass::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrafficClass::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.name)
}
inline void TrafficClass::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.TrafficClass.name)
}
inline void TrafficClass::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.TrafficClass.name)
}
inline ::std::string* TrafficClass::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.TrafficClass.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrafficClass::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.TrafficClass.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrafficClass::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.TrafficClass.name)
}

// optional int64 priority = 2;
inline void TrafficClass::clear_priority() {
  priority_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass::priority() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.priority)
  return priority_;
}
inline void TrafficClass::set_priority(::google::protobuf::int64 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.priority)
}

// optional int64 wid = 3;
inline void TrafficClass::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TrafficClass::wid() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.wid)
  return wid_;
}
inline void TrafficClass::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.TrafficClass.wid)
}

// optional .bess.pb.TrafficClass.Resource limit = 4;
inline bool TrafficClass::has_limit() const {
  return !_is_default_instance_ && limit_ != NULL;
}
inline void TrafficClass::clear_limit() {
  if (GetArenaNoVirtual() == NULL && limit_ != NULL) delete limit_;
  limit_ = NULL;
}
inline const ::bess::pb::TrafficClass_Resource& TrafficClass::limit() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.limit)
  return limit_ != NULL ? *limit_ : *default_instance_->limit_;
}
inline ::bess::pb::TrafficClass_Resource* TrafficClass::mutable_limit() {
  
  if (limit_ == NULL) {
    limit_ = new ::bess::pb::TrafficClass_Resource;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.TrafficClass.limit)
  return limit_;
}
inline ::bess::pb::TrafficClass_Resource* TrafficClass::release_limit() {
  // @@protoc_insertion_point(field_release:bess.pb.TrafficClass.limit)
  
  ::bess::pb::TrafficClass_Resource* temp = limit_;
  limit_ = NULL;
  return temp;
}
inline void TrafficClass::set_allocated_limit(::bess::pb::TrafficClass_Resource* limit) {
  delete limit_;
  limit_ = limit;
  if (limit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.TrafficClass.limit)
}

// optional .bess.pb.TrafficClass.Resource max_burst = 5;
inline bool TrafficClass::has_max_burst() const {
  return !_is_default_instance_ && max_burst_ != NULL;
}
inline void TrafficClass::clear_max_burst() {
  if (GetArenaNoVirtual() == NULL && max_burst_ != NULL) delete max_burst_;
  max_burst_ = NULL;
}
inline const ::bess::pb::TrafficClass_Resource& TrafficClass::max_burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.TrafficClass.max_burst)
  return max_burst_ != NULL ? *max_burst_ : *default_instance_->max_burst_;
}
inline ::bess::pb::TrafficClass_Resource* TrafficClass::mutable_max_burst() {
  
  if (max_burst_ == NULL) {
    max_burst_ = new ::bess::pb::TrafficClass_Resource;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.TrafficClass.max_burst)
  return max_burst_;
}
inline ::bess::pb::TrafficClass_Resource* TrafficClass::release_max_burst() {
  // @@protoc_insertion_point(field_release:bess.pb.TrafficClass.max_burst)
  
  ::bess::pb::TrafficClass_Resource* temp = max_burst_;
  max_burst_ = NULL;
  return temp;
}
inline void TrafficClass::set_allocated_max_burst(::bess::pb::TrafficClass_Resource* max_burst) {
  delete max_burst_;
  max_burst_ = max_burst;
  if (max_burst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.TrafficClass.max_burst)
}

// -------------------------------------------------------------------

// GetTcStatsResponse

// optional .bess.pb.Error error = 1;
inline bool GetTcStatsResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetTcStatsResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& GetTcStatsResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* GetTcStatsResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetTcStatsResponse.error)
  return error_;
}
inline ::bess::pb::Error* GetTcStatsResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.GetTcStatsResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetTcStatsResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetTcStatsResponse.error)
}

// optional double timestamp = 2;
inline void GetTcStatsResponse::clear_timestamp() {
  timestamp_ = 0;
}
inline double GetTcStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.timestamp)
  return timestamp_;
}
inline void GetTcStatsResponse::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsResponse.timestamp)
}

// optional uint64 count = 3;
inline void GetTcStatsResponse::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetTcStatsResponse::count() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.count)
  return count_;
}
inline void GetTcStatsResponse::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsResponse.count)
}

// optional uint64 cycles = 4;
inline void GetTcStatsResponse::clear_cycles() {
  cycles_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetTcStatsResponse::cycles() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.cycles)
  return cycles_;
}
inline void GetTcStatsResponse::set_cycles(::google::protobuf::uint64 value) {
  
  cycles_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsResponse.cycles)
}

// optional uint64 packets = 5;
inline void GetTcStatsResponse::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetTcStatsResponse::packets() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.packets)
  return packets_;
}
inline void GetTcStatsResponse::set_packets(::google::protobuf::uint64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsResponse.packets)
}

// optional uint64 bits = 6;
inline void GetTcStatsResponse::clear_bits() {
  bits_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetTcStatsResponse::bits() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsResponse.bits)
  return bits_;
}
inline void GetTcStatsResponse::set_bits(::google::protobuf::uint64 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsResponse.bits)
}

// -------------------------------------------------------------------

// ListTcsResponse_TrafficClassStatus

// optional .bess.pb.TrafficClass class = 1;
inline bool ListTcsResponse_TrafficClassStatus::has_class_() const {
  return !_is_default_instance_ && class__ != NULL;
}
inline void ListTcsResponse_TrafficClassStatus::clear_class_() {
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
}
inline const ::bess::pb::TrafficClass& ListTcsResponse_TrafficClassStatus::class_() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsResponse.TrafficClassStatus.class)
  return class__ != NULL ? *class__ : *default_instance_->class__;
}
inline ::bess::pb::TrafficClass* ListTcsResponse_TrafficClassStatus::mutable_class_() {
  
  if (class__ == NULL) {
    class__ = new ::bess::pb::TrafficClass;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListTcsResponse.TrafficClassStatus.class)
  return class__;
}
inline ::bess::pb::TrafficClass* ListTcsResponse_TrafficClassStatus::release_class_() {
  // @@protoc_insertion_point(field_release:bess.pb.ListTcsResponse.TrafficClassStatus.class)
  
  ::bess::pb::TrafficClass* temp = class__;
  class__ = NULL;
  return temp;
}
inline void ListTcsResponse_TrafficClassStatus::set_allocated_class_(::bess::pb::TrafficClass* class_) {
  delete class__;
  class__ = class_;
  if (class_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListTcsResponse.TrafficClassStatus.class)
}

// optional string parent = 2;
inline void ListTcsResponse_TrafficClassStatus::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTcsResponse_TrafficClassStatus::parent() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTcsResponse_TrafficClassStatus::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
}
inline void ListTcsResponse_TrafficClassStatus::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
}
inline void ListTcsResponse_TrafficClassStatus::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
}
inline ::std::string* ListTcsResponse_TrafficClassStatus::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTcsResponse_TrafficClassStatus::release_parent() {
  // @@protoc_insertion_point(field_release:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTcsResponse_TrafficClassStatus::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListTcsResponse.TrafficClassStatus.parent)
}

// optional int64 tasks = 3;
inline void ListTcsResponse_TrafficClassStatus::clear_tasks() {
  tasks_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListTcsResponse_TrafficClassStatus::tasks() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsResponse.TrafficClassStatus.tasks)
  return tasks_;
}
inline void ListTcsResponse_TrafficClassStatus::set_tasks(::google::protobuf::int64 value) {
  
  tasks_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.ListTcsResponse.TrafficClassStatus.tasks)
}

// -------------------------------------------------------------------

// ListTcsResponse

// optional .bess.pb.Error error = 1;
inline bool ListTcsResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListTcsResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListTcsResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListTcsResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListTcsResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListTcsResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListTcsResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListTcsResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListTcsResponse.error)
}

// repeated .bess.pb.ListTcsResponse.TrafficClassStatus classes_status = 2;
inline int ListTcsResponse::classes_status_size() const {
  return classes_status_.size();
}
inline void ListTcsResponse::clear_classes_status() {
  classes_status_.Clear();
}
inline const ::bess::pb::ListTcsResponse_TrafficClassStatus& ListTcsResponse::classes_status(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListTcsResponse.classes_status)
  return classes_status_.Get(index);
}
inline ::bess::pb::ListTcsResponse_TrafficClassStatus* ListTcsResponse::mutable_classes_status(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListTcsResponse.classes_status)
  return classes_status_.Mutable(index);
}
inline ::bess::pb::ListTcsResponse_TrafficClassStatus* ListTcsResponse::add_classes_status() {
  // @@protoc_insertion_point(field_add:bess.pb.ListTcsResponse.classes_status)
  return classes_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bess::pb::ListTcsResponse_TrafficClassStatus >*
ListTcsResponse::mutable_classes_status() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListTcsResponse.classes_status)
  return &classes_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bess::pb::ListTcsResponse_TrafficClassStatus >&
ListTcsResponse::classes_status() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListTcsResponse.classes_status)
  return classes_status_;
}

// -------------------------------------------------------------------

// AddTcRequest

// optional .bess.pb.TrafficClass class = 1;
inline bool AddTcRequest::has_class_() const {
  return !_is_default_instance_ && class__ != NULL;
}
inline void AddTcRequest::clear_class_() {
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
}
inline const ::bess::pb::TrafficClass& AddTcRequest::class_() const {
  // @@protoc_insertion_point(field_get:bess.pb.AddTcRequest.class)
  return class__ != NULL ? *class__ : *default_instance_->class__;
}
inline ::bess::pb::TrafficClass* AddTcRequest::mutable_class_() {
  
  if (class__ == NULL) {
    class__ = new ::bess::pb::TrafficClass;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.AddTcRequest.class)
  return class__;
}
inline ::bess::pb::TrafficClass* AddTcRequest::release_class_() {
  // @@protoc_insertion_point(field_release:bess.pb.AddTcRequest.class)
  
  ::bess::pb::TrafficClass* temp = class__;
  class__ = NULL;
  return temp;
}
inline void AddTcRequest::set_allocated_class_(::bess::pb::TrafficClass* class_) {
  delete class__;
  class__ = class_;
  if (class_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.AddTcRequest.class)
}

// -------------------------------------------------------------------

// GetTcStatsRequest

// optional string name = 1;
inline void GetTcStatsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTcStatsRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetTcStatsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTcStatsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetTcStatsRequest.name)
}
inline void GetTcStatsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetTcStatsRequest.name)
}
inline void GetTcStatsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetTcStatsRequest.name)
}
inline ::std::string* GetTcStatsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetTcStatsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTcStatsRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetTcStatsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTcStatsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetTcStatsRequest.name)
}

// -------------------------------------------------------------------

// ListDriversResponse

// optional .bess.pb.Error error = 1;
inline bool ListDriversResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListDriversResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListDriversResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListDriversResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListDriversResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListDriversResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListDriversResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListDriversResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListDriversResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListDriversResponse.error)
}

// repeated string driver_names = 2;
inline int ListDriversResponse::driver_names_size() const {
  return driver_names_.size();
}
inline void ListDriversResponse::clear_driver_names() {
  driver_names_.Clear();
}
inline const ::std::string& ListDriversResponse::driver_names(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListDriversResponse.driver_names)
  return driver_names_.Get(index);
}
inline ::std::string* ListDriversResponse::mutable_driver_names(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListDriversResponse.driver_names)
  return driver_names_.Mutable(index);
}
inline void ListDriversResponse::set_driver_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.ListDriversResponse.driver_names)
  driver_names_.Mutable(index)->assign(value);
}
inline void ListDriversResponse::set_driver_names(int index, const char* value) {
  driver_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.ListDriversResponse.driver_names)
}
inline void ListDriversResponse::set_driver_names(int index, const char* value, size_t size) {
  driver_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListDriversResponse.driver_names)
}
inline ::std::string* ListDriversResponse::add_driver_names() {
  // @@protoc_insertion_point(field_add_mutable:bess.pb.ListDriversResponse.driver_names)
  return driver_names_.Add();
}
inline void ListDriversResponse::add_driver_names(const ::std::string& value) {
  driver_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.ListDriversResponse.driver_names)
}
inline void ListDriversResponse::add_driver_names(const char* value) {
  driver_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.ListDriversResponse.driver_names)
}
inline void ListDriversResponse::add_driver_names(const char* value, size_t size) {
  driver_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.ListDriversResponse.driver_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListDriversResponse::driver_names() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListDriversResponse.driver_names)
  return driver_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListDriversResponse::mutable_driver_names() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListDriversResponse.driver_names)
  return &driver_names_;
}

// -------------------------------------------------------------------

// GetDriverInfoRequest

// optional string driver_name = 1;
inline void GetDriverInfoRequest::clear_driver_name() {
  driver_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDriverInfoRequest::driver_name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetDriverInfoRequest.driver_name)
  return driver_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoRequest::set_driver_name(const ::std::string& value) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetDriverInfoRequest.driver_name)
}
inline void GetDriverInfoRequest::set_driver_name(const char* value) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetDriverInfoRequest.driver_name)
}
inline void GetDriverInfoRequest::set_driver_name(const char* value, size_t size) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetDriverInfoRequest.driver_name)
}
inline ::std::string* GetDriverInfoRequest::mutable_driver_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetDriverInfoRequest.driver_name)
  return driver_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDriverInfoRequest::release_driver_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetDriverInfoRequest.driver_name)
  
  return driver_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoRequest::set_allocated_driver_name(::std::string* driver_name) {
  if (driver_name != NULL) {
    
  } else {
    
  }
  driver_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver_name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetDriverInfoRequest.driver_name)
}

// -------------------------------------------------------------------

// GetDriverInfoResponse

// optional .bess.pb.Error error = 1;
inline bool GetDriverInfoResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetDriverInfoResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& GetDriverInfoResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetDriverInfoResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* GetDriverInfoResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetDriverInfoResponse.error)
  return error_;
}
inline ::bess::pb::Error* GetDriverInfoResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.GetDriverInfoResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetDriverInfoResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetDriverInfoResponse.error)
}

// optional string name = 2;
inline void GetDriverInfoResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDriverInfoResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetDriverInfoResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetDriverInfoResponse.name)
}
inline void GetDriverInfoResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetDriverInfoResponse.name)
}
inline void GetDriverInfoResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetDriverInfoResponse.name)
}
inline ::std::string* GetDriverInfoResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetDriverInfoResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDriverInfoResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetDriverInfoResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetDriverInfoResponse.name)
}

// optional string help = 3;
inline void GetDriverInfoResponse::clear_help() {
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDriverInfoResponse::help() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetDriverInfoResponse.help)
  return help_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoResponse::set_help(const ::std::string& value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetDriverInfoResponse.help)
}
inline void GetDriverInfoResponse::set_help(const char* value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetDriverInfoResponse.help)
}
inline void GetDriverInfoResponse::set_help(const char* value, size_t size) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetDriverInfoResponse.help)
}
inline ::std::string* GetDriverInfoResponse::mutable_help() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetDriverInfoResponse.help)
  return help_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDriverInfoResponse::release_help() {
  // @@protoc_insertion_point(field_release:bess.pb.GetDriverInfoResponse.help)
  
  return help_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDriverInfoResponse::set_allocated_help(::std::string* help) {
  if (help != NULL) {
    
  } else {
    
  }
  help_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), help);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetDriverInfoResponse.help)
}

// repeated string commands = 4;
inline int GetDriverInfoResponse::commands_size() const {
  return commands_.size();
}
inline void GetDriverInfoResponse::clear_commands() {
  commands_.Clear();
}
inline const ::std::string& GetDriverInfoResponse::commands(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetDriverInfoResponse.commands)
  return commands_.Get(index);
}
inline ::std::string* GetDriverInfoResponse::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetDriverInfoResponse.commands)
  return commands_.Mutable(index);
}
inline void GetDriverInfoResponse::set_commands(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.GetDriverInfoResponse.commands)
  commands_.Mutable(index)->assign(value);
}
inline void GetDriverInfoResponse::set_commands(int index, const char* value) {
  commands_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.GetDriverInfoResponse.commands)
}
inline void GetDriverInfoResponse::set_commands(int index, const char* value, size_t size) {
  commands_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetDriverInfoResponse.commands)
}
inline ::std::string* GetDriverInfoResponse::add_commands() {
  // @@protoc_insertion_point(field_add_mutable:bess.pb.GetDriverInfoResponse.commands)
  return commands_.Add();
}
inline void GetDriverInfoResponse::add_commands(const ::std::string& value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.GetDriverInfoResponse.commands)
}
inline void GetDriverInfoResponse::add_commands(const char* value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.GetDriverInfoResponse.commands)
}
inline void GetDriverInfoResponse::add_commands(const char* value, size_t size) {
  commands_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.GetDriverInfoResponse.commands)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetDriverInfoResponse::commands() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetDriverInfoResponse.commands)
  return commands_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetDriverInfoResponse::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetDriverInfoResponse.commands)
  return &commands_;
}

// -------------------------------------------------------------------

// ListMclassResponse

// optional .bess.pb.Error error = 1;
inline bool ListMclassResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ListMclassResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ListMclassResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ListMclassResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ListMclassResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ListMclassResponse.error)
  return error_;
}
inline ::bess::pb::Error* ListMclassResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ListMclassResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ListMclassResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ListMclassResponse.error)
}

// repeated string names = 2;
inline int ListMclassResponse::names_size() const {
  return names_.size();
}
inline void ListMclassResponse::clear_names() {
  names_.Clear();
}
inline const ::std::string& ListMclassResponse::names(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ListMclassResponse.names)
  return names_.Get(index);
}
inline ::std::string* ListMclassResponse::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.ListMclassResponse.names)
  return names_.Mutable(index);
}
inline void ListMclassResponse::set_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.ListMclassResponse.names)
  names_.Mutable(index)->assign(value);
}
inline void ListMclassResponse::set_names(int index, const char* value) {
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.ListMclassResponse.names)
}
inline void ListMclassResponse::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ListMclassResponse.names)
}
inline ::std::string* ListMclassResponse::add_names() {
  // @@protoc_insertion_point(field_add_mutable:bess.pb.ListMclassResponse.names)
  return names_.Add();
}
inline void ListMclassResponse::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.ListMclassResponse.names)
}
inline void ListMclassResponse::add_names(const char* value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.ListMclassResponse.names)
}
inline void ListMclassResponse::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.ListMclassResponse.names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListMclassResponse::names() const {
  // @@protoc_insertion_point(field_list:bess.pb.ListMclassResponse.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListMclassResponse::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ListMclassResponse.names)
  return &names_;
}

// -------------------------------------------------------------------

// GetMclassInfoRequest

// optional string name = 1;
inline void GetMclassInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMclassInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetMclassInfoRequest.name)
}
inline void GetMclassInfoRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetMclassInfoRequest.name)
}
inline void GetMclassInfoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetMclassInfoRequest.name)
}
inline ::std::string* GetMclassInfoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMclassInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetMclassInfoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetMclassInfoRequest.name)
}

// -------------------------------------------------------------------

// GetMclassInfoResponse

// optional .bess.pb.Error error = 1;
inline bool GetMclassInfoResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void GetMclassInfoResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& GetMclassInfoResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* GetMclassInfoResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoResponse.error)
  return error_;
}
inline ::bess::pb::Error* GetMclassInfoResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.GetMclassInfoResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetMclassInfoResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetMclassInfoResponse.error)
}

// optional string name = 2;
inline void GetMclassInfoResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMclassInfoResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetMclassInfoResponse.name)
}
inline void GetMclassInfoResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetMclassInfoResponse.name)
}
inline void GetMclassInfoResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetMclassInfoResponse.name)
}
inline ::std::string* GetMclassInfoResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMclassInfoResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.GetMclassInfoResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetMclassInfoResponse.name)
}

// optional string help = 3;
inline void GetMclassInfoResponse::clear_help() {
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMclassInfoResponse::help() const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoResponse.help)
  return help_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoResponse::set_help(const ::std::string& value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.GetMclassInfoResponse.help)
}
inline void GetMclassInfoResponse::set_help(const char* value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.GetMclassInfoResponse.help)
}
inline void GetMclassInfoResponse::set_help(const char* value, size_t size) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetMclassInfoResponse.help)
}
inline ::std::string* GetMclassInfoResponse::mutable_help() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoResponse.help)
  return help_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMclassInfoResponse::release_help() {
  // @@protoc_insertion_point(field_release:bess.pb.GetMclassInfoResponse.help)
  
  return help_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMclassInfoResponse::set_allocated_help(::std::string* help) {
  if (help != NULL) {
    
  } else {
    
  }
  help_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), help);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GetMclassInfoResponse.help)
}

// repeated string cmds = 4;
inline int GetMclassInfoResponse::cmds_size() const {
  return cmds_.size();
}
inline void GetMclassInfoResponse::clear_cmds() {
  cmds_.Clear();
}
inline const ::std::string& GetMclassInfoResponse::cmds(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoResponse.cmds)
  return cmds_.Get(index);
}
inline ::std::string* GetMclassInfoResponse::mutable_cmds(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoResponse.cmds)
  return cmds_.Mutable(index);
}
inline void GetMclassInfoResponse::set_cmds(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.GetMclassInfoResponse.cmds)
  cmds_.Mutable(index)->assign(value);
}
inline void GetMclassInfoResponse::set_cmds(int index, const char* value) {
  cmds_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.GetMclassInfoResponse.cmds)
}
inline void GetMclassInfoResponse::set_cmds(int index, const char* value, size_t size) {
  cmds_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetMclassInfoResponse.cmds)
}
inline ::std::string* GetMclassInfoResponse::add_cmds() {
  // @@protoc_insertion_point(field_add_mutable:bess.pb.GetMclassInfoResponse.cmds)
  return cmds_.Add();
}
inline void GetMclassInfoResponse::add_cmds(const ::std::string& value) {
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.GetMclassInfoResponse.cmds)
}
inline void GetMclassInfoResponse::add_cmds(const char* value) {
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.GetMclassInfoResponse.cmds)
}
inline void GetMclassInfoResponse::add_cmds(const char* value, size_t size) {
  cmds_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.GetMclassInfoResponse.cmds)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetMclassInfoResponse::cmds() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetMclassInfoResponse.cmds)
  return cmds_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetMclassInfoResponse::mutable_cmds() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetMclassInfoResponse.cmds)
  return &cmds_;
}

// repeated string cmd_args = 5;
inline int GetMclassInfoResponse::cmd_args_size() const {
  return cmd_args_.size();
}
inline void GetMclassInfoResponse::clear_cmd_args() {
  cmd_args_.Clear();
}
inline const ::std::string& GetMclassInfoResponse::cmd_args(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.GetMclassInfoResponse.cmd_args)
  return cmd_args_.Get(index);
}
inline ::std::string* GetMclassInfoResponse::mutable_cmd_args(int index) {
  // @@protoc_insertion_point(field_mutable:bess.pb.GetMclassInfoResponse.cmd_args)
  return cmd_args_.Mutable(index);
}
inline void GetMclassInfoResponse::set_cmd_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.pb.GetMclassInfoResponse.cmd_args)
  cmd_args_.Mutable(index)->assign(value);
}
inline void GetMclassInfoResponse::set_cmd_args(int index, const char* value) {
  cmd_args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.GetMclassInfoResponse.cmd_args)
}
inline void GetMclassInfoResponse::set_cmd_args(int index, const char* value, size_t size) {
  cmd_args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.GetMclassInfoResponse.cmd_args)
}
inline ::std::string* GetMclassInfoResponse::add_cmd_args() {
  // @@protoc_insertion_point(field_add_mutable:bess.pb.GetMclassInfoResponse.cmd_args)
  return cmd_args_.Add();
}
inline void GetMclassInfoResponse::add_cmd_args(const ::std::string& value) {
  cmd_args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.GetMclassInfoResponse.cmd_args)
}
inline void GetMclassInfoResponse::add_cmd_args(const char* value) {
  cmd_args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.GetMclassInfoResponse.cmd_args)
}
inline void GetMclassInfoResponse::add_cmd_args(const char* value, size_t size) {
  cmd_args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.GetMclassInfoResponse.cmd_args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetMclassInfoResponse::cmd_args() const {
  // @@protoc_insertion_point(field_list:bess.pb.GetMclassInfoResponse.cmd_args)
  return cmd_args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetMclassInfoResponse::mutable_cmd_args() {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GetMclassInfoResponse.cmd_args)
  return &cmd_args_;
}

// -------------------------------------------------------------------

// CreateModuleRequest

// optional string name = 1;
inline void CreateModuleRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateModuleRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreateModuleRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreateModuleRequest.name)
}
inline void CreateModuleRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreateModuleRequest.name)
}
inline void CreateModuleRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreateModuleRequest.name)
}
inline ::std::string* CreateModuleRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreateModuleRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateModuleRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.CreateModuleRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreateModuleRequest.name)
}

// optional string mclass = 2;
inline void CreateModuleRequest::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateModuleRequest::mclass() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreateModuleRequest.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleRequest::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreateModuleRequest.mclass)
}
inline void CreateModuleRequest::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreateModuleRequest.mclass)
}
inline void CreateModuleRequest::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreateModuleRequest.mclass)
}
inline ::std::string* CreateModuleRequest::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreateModuleRequest.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateModuleRequest::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.pb.CreateModuleRequest.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateModuleRequest::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreateModuleRequest.mclass)
}

// optional .google.protobuf.Any arg = 3;
inline bool CreateModuleRequest::has_arg() const {
  return !_is_default_instance_ && arg_ != NULL;
}
inline void CreateModuleRequest::clear_arg() {
  if (GetArenaNoVirtual() == NULL && arg_ != NULL) delete arg_;
  arg_ = NULL;
}
inline const ::google::protobuf::Any& CreateModuleRequest::arg() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreateModuleRequest.arg)
  return arg_ != NULL ? *arg_ : *default_instance_->arg_;
}
inline ::google::protobuf::Any* CreateModuleRequest::mutable_arg() {
  
  if (arg_ == NULL) {
    arg_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.CreateModuleRequest.arg)
  return arg_;
}
inline ::google::protobuf::Any* CreateModuleRequest::release_arg() {
  // @@protoc_insertion_point(field_release:bess.pb.CreateModuleRequest.arg)
  
  ::google::protobuf::Any* temp = arg_;
  arg_ = NULL;
  return temp;
}
inline void CreateModuleRequest::set_allocated_arg(::google::protobuf::Any* arg) {
  delete arg_;
  arg_ = arg;
  if (arg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreateModuleRequest.arg)
}

// -------------------------------------------------------------------

// ModuleCommandRequest

// optional string name = 1;
inline void ModuleCommandRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModuleCommandRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.ModuleCommandRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleCommandRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ModuleCommandRequest.name)
}
inline void ModuleCommandRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ModuleCommandRequest.name)
}
inline void ModuleCommandRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ModuleCommandRequest.name)
}
inline ::std::string* ModuleCommandRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ModuleCommandRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModuleCommandRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.ModuleCommandRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleCommandRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ModuleCommandRequest.name)
}

// optional string cmd = 2;
inline void ModuleCommandRequest::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModuleCommandRequest::cmd() const {
  // @@protoc_insertion_point(field_get:bess.pb.ModuleCommandRequest.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleCommandRequest::set_cmd(const ::std::string& value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.ModuleCommandRequest.cmd)
}
inline void ModuleCommandRequest::set_cmd(const char* value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.ModuleCommandRequest.cmd)
}
inline void ModuleCommandRequest::set_cmd(const char* value, size_t size) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.ModuleCommandRequest.cmd)
}
inline ::std::string* ModuleCommandRequest::mutable_cmd() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.ModuleCommandRequest.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModuleCommandRequest::release_cmd() {
  // @@protoc_insertion_point(field_release:bess.pb.ModuleCommandRequest.cmd)
  
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModuleCommandRequest::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    
  } else {
    
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ModuleCommandRequest.cmd)
}

// optional .google.protobuf.Any arg = 3;
inline bool ModuleCommandRequest::has_arg() const {
  return !_is_default_instance_ && arg_ != NULL;
}
inline void ModuleCommandRequest::clear_arg() {
  if (GetArenaNoVirtual() == NULL && arg_ != NULL) delete arg_;
  arg_ = NULL;
}
inline const ::google::protobuf::Any& ModuleCommandRequest::arg() const {
  // @@protoc_insertion_point(field_get:bess.pb.ModuleCommandRequest.arg)
  return arg_ != NULL ? *arg_ : *default_instance_->arg_;
}
inline ::google::protobuf::Any* ModuleCommandRequest::mutable_arg() {
  
  if (arg_ == NULL) {
    arg_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ModuleCommandRequest.arg)
  return arg_;
}
inline ::google::protobuf::Any* ModuleCommandRequest::release_arg() {
  // @@protoc_insertion_point(field_release:bess.pb.ModuleCommandRequest.arg)
  
  ::google::protobuf::Any* temp = arg_;
  arg_ = NULL;
  return temp;
}
inline void ModuleCommandRequest::set_allocated_arg(::google::protobuf::Any* arg) {
  delete arg_;
  arg_ = arg;
  if (arg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ModuleCommandRequest.arg)
}

// -------------------------------------------------------------------

// ModuleCommandResponse

// optional .bess.pb.Error error = 1;
inline bool ModuleCommandResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void ModuleCommandResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& ModuleCommandResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.ModuleCommandResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* ModuleCommandResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ModuleCommandResponse.error)
  return error_;
}
inline ::bess::pb::Error* ModuleCommandResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.ModuleCommandResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ModuleCommandResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ModuleCommandResponse.error)
}

// optional .google.protobuf.Any other = 2;
inline bool ModuleCommandResponse::has_other() const {
  return !_is_default_instance_ && other_ != NULL;
}
inline void ModuleCommandResponse::clear_other() {
  if (GetArenaNoVirtual() == NULL && other_ != NULL) delete other_;
  other_ = NULL;
}
inline const ::google::protobuf::Any& ModuleCommandResponse::other() const {
  // @@protoc_insertion_point(field_get:bess.pb.ModuleCommandResponse.other)
  return other_ != NULL ? *other_ : *default_instance_->other_;
}
inline ::google::protobuf::Any* ModuleCommandResponse::mutable_other() {
  
  if (other_ == NULL) {
    other_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.ModuleCommandResponse.other)
  return other_;
}
inline ::google::protobuf::Any* ModuleCommandResponse::release_other() {
  // @@protoc_insertion_point(field_release:bess.pb.ModuleCommandResponse.other)
  
  ::google::protobuf::Any* temp = other_;
  other_ = NULL;
  return temp;
}
inline void ModuleCommandResponse::set_allocated_other(::google::protobuf::Any* other) {
  delete other_;
  other_ = other;
  if (other) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ModuleCommandResponse.other)
}

// -------------------------------------------------------------------

// CreatePortRequest

// optional string name = 1;
inline void CreatePortRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePortRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.name)
}
inline void CreatePortRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreatePortRequest.name)
}
inline void CreatePortRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreatePortRequest.name)
}
inline ::std::string* CreatePortRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePortRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortRequest.name)
}

// optional string driver = 2;
inline void CreatePortRequest::clear_driver() {
  driver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePortRequest::driver() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.driver)
  return driver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_driver(const ::std::string& value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.driver)
}
inline void CreatePortRequest::set_driver(const char* value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreatePortRequest.driver)
}
inline void CreatePortRequest::set_driver(const char* value, size_t size) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreatePortRequest.driver)
}
inline ::std::string* CreatePortRequest::mutable_driver() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortRequest.driver)
  return driver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePortRequest::release_driver() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortRequest.driver)
  
  return driver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_allocated_driver(::std::string* driver) {
  if (driver != NULL) {
    
  } else {
    
  }
  driver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortRequest.driver)
}

// optional uint64 num_inc_q = 3;
inline void CreatePortRequest::clear_num_inc_q() {
  num_inc_q_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreatePortRequest::num_inc_q() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.num_inc_q)
  return num_inc_q_;
}
inline void CreatePortRequest::set_num_inc_q(::google::protobuf::uint64 value) {
  
  num_inc_q_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.num_inc_q)
}

// optional uint64 num_out_q = 4;
inline void CreatePortRequest::clear_num_out_q() {
  num_out_q_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreatePortRequest::num_out_q() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.num_out_q)
  return num_out_q_;
}
inline void CreatePortRequest::set_num_out_q(::google::protobuf::uint64 value) {
  
  num_out_q_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.num_out_q)
}

// optional uint64 size_inc_q = 5;
inline void CreatePortRequest::clear_size_inc_q() {
  size_inc_q_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreatePortRequest::size_inc_q() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.size_inc_q)
  return size_inc_q_;
}
inline void CreatePortRequest::set_size_inc_q(::google::protobuf::uint64 value) {
  
  size_inc_q_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.size_inc_q)
}

// optional uint64 size_out_q = 6;
inline void CreatePortRequest::clear_size_out_q() {
  size_out_q_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreatePortRequest::size_out_q() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.size_out_q)
  return size_out_q_;
}
inline void CreatePortRequest::set_size_out_q(::google::protobuf::uint64 value) {
  
  size_out_q_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.size_out_q)
}

// optional string mac_addr = 7;
inline void CreatePortRequest::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePortRequest::mac_addr() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.mac_addr)
  return mac_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortRequest.mac_addr)
}
inline void CreatePortRequest::set_mac_addr(const char* value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreatePortRequest.mac_addr)
}
inline void CreatePortRequest::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreatePortRequest.mac_addr)
}
inline ::std::string* CreatePortRequest::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortRequest.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePortRequest::release_mac_addr() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortRequest.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortRequest::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortRequest.mac_addr)
}

// optional .google.protobuf.Any arg = 8;
inline bool CreatePortRequest::has_arg() const {
  return !_is_default_instance_ && arg_ != NULL;
}
inline void CreatePortRequest::clear_arg() {
  if (GetArenaNoVirtual() == NULL && arg_ != NULL) delete arg_;
  arg_ = NULL;
}
inline const ::google::protobuf::Any& CreatePortRequest::arg() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortRequest.arg)
  return arg_ != NULL ? *arg_ : *default_instance_->arg_;
}
inline ::google::protobuf::Any* CreatePortRequest::mutable_arg() {
  
  if (arg_ == NULL) {
    arg_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortRequest.arg)
  return arg_;
}
inline ::google::protobuf::Any* CreatePortRequest::release_arg() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortRequest.arg)
  
  ::google::protobuf::Any* temp = arg_;
  arg_ = NULL;
  return temp;
}
inline void CreatePortRequest::set_allocated_arg(::google::protobuf::Any* arg) {
  delete arg_;
  arg_ = arg;
  if (arg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortRequest.arg)
}

// -------------------------------------------------------------------

// CreatePortResponse

// optional .bess.pb.Error error = 1;
inline bool CreatePortResponse::has_error() const {
  return !_is_default_instance_ && error_ != NULL;
}
inline void CreatePortResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::bess::pb::Error& CreatePortResponse::error() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortResponse.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::bess::pb::Error* CreatePortResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::bess::pb::Error;
  }
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortResponse.error)
  return error_;
}
inline ::bess::pb::Error* CreatePortResponse::release_error() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortResponse.error)
  
  ::bess::pb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CreatePortResponse::set_allocated_error(::bess::pb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortResponse.error)
}

// optional string name = 2;
inline void CreatePortResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePortResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.CreatePortResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.CreatePortResponse.name)
}
inline void CreatePortResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.CreatePortResponse.name)
}
inline void CreatePortResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.CreatePortResponse.name)
}
inline ::std::string* CreatePortResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.CreatePortResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePortResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.CreatePortResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePortResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.CreatePortResponse.name)
}

// -------------------------------------------------------------------

// EnableTrackRequest

// optional string name = 1;
inline void EnableTrackRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnableTrackRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTrackRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTrackRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.EnableTrackRequest.name)
}
inline void EnableTrackRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.EnableTrackRequest.name)
}
inline void EnableTrackRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.EnableTrackRequest.name)
}
inline ::std::string* EnableTrackRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.EnableTrackRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnableTrackRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.EnableTrackRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableTrackRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.EnableTrackRequest.name)
}

// optional int64 gate = 2;
inline void EnableTrackRequest::clear_gate() {
  gate_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EnableTrackRequest::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTrackRequest.gate)
  return gate_;
}
inline void EnableTrackRequest::set_gate(::google::protobuf::int64 value) {
  
  gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.EnableTrackRequest.gate)
}

// optional bool is_igate = 3;
inline void EnableTrackRequest::clear_is_igate() {
  is_igate_ = false;
}
inline bool EnableTrackRequest::is_igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTrackRequest.is_igate)
  return is_igate_;
}
inline void EnableTrackRequest::set_is_igate(bool value) {
  
  is_igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.EnableTrackRequest.is_igate)
}

// optional bool use_gate = 4;
inline void EnableTrackRequest::clear_use_gate() {
  use_gate_ = false;
}
inline bool EnableTrackRequest::use_gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.EnableTrackRequest.use_gate)
  return use_gate_;
}
inline void EnableTrackRequest::set_use_gate(bool value) {
  
  use_gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.EnableTrackRequest.use_gate)
}

// -------------------------------------------------------------------

// DisableTrackRequest

// optional string name = 1;
inline void DisableTrackRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DisableTrackRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTrackRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableTrackRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.pb.DisableTrackRequest.name)
}
inline void DisableTrackRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.pb.DisableTrackRequest.name)
}
inline void DisableTrackRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.pb.DisableTrackRequest.name)
}
inline ::std::string* DisableTrackRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.pb.DisableTrackRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisableTrackRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.pb.DisableTrackRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableTrackRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.DisableTrackRequest.name)
}

// optional int64 gate = 2;
inline void DisableTrackRequest::clear_gate() {
  gate_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DisableTrackRequest::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTrackRequest.gate)
  return gate_;
}
inline void DisableTrackRequest::set_gate(::google::protobuf::int64 value) {
  
  gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisableTrackRequest.gate)
}

// optional bool is_igate = 3;
inline void DisableTrackRequest::clear_is_igate() {
  is_igate_ = false;
}
inline bool DisableTrackRequest::is_igate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTrackRequest.is_igate)
  return is_igate_;
}
inline void DisableTrackRequest::set_is_igate(bool value) {
  
  is_igate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisableTrackRequest.is_igate)
}

// optional bool use_gate = 4;
inline void DisableTrackRequest::clear_use_gate() {
  use_gate_ = false;
}
inline bool DisableTrackRequest::use_gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.DisableTrackRequest.use_gate)
  return use_gate_;
}
inline void DisableTrackRequest::set_use_gate(bool value) {
  
  use_gate_ = value;
  // @@protoc_insertion_point(field_set:bess.pb.DisableTrackRequest.use_gate)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace bess

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bess_5fmsg_2eproto__INCLUDED
